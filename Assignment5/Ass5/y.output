Terminals unused in grammar

   COMMENT
   TILDA
   NEGATION
   HASH
   NEWLINE
   UNKNOWN


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 N: %empty

    3 primary_expression: IDENTIFIER
    4                   | INT_NO
    5                   | FLOAT_NO
    6                   | CHARACTER
    7                   | STRING
    8                   | LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE

    9 postfix_expression: primary_expression
   10                   | postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
   11                   | postfix_expression LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
   12                   | postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
   13                   | postfix_expression PERIOD IDENTIFIER
   14                   | postfix_expression ARROW IDENTIFIER
   15                   | postfix_expression INCREMENT
   16                   | postfix_expression DECREMENT
   17                   | postfix_expression TRANSPOSE

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 unary_expression: postfix_expression
   21                 | INCREMENT unary_expression
   22                 | DECREMENT unary_expression
   23                 | unary_operator cast_expression

   24 unary_operator: AMPERSAND
   25               | MULTIPLY
   26               | ADD
   27               | SUBTRACT

   28 cast_expression: unary_expression

   29 multiplicative_expression: cast_expression
   30                          | multiplicative_expression MULTIPLY cast_expression
   31                          | multiplicative_expression DIVIDE cast_expression
   32                          | multiplicative_expression PERCENTILE cast_expression

   33 additive_expression: multiplicative_expression
   34                    | additive_expression ADD multiplicative_expression
   35                    | additive_expression SUBTRACT multiplicative_expression

   36 shift_expression: additive_expression
   37                 | shift_expression LEFT_SHIFT additive_expression
   38                 | shift_expression RIGHT_SHIFT additive_expression

   39 relational_expression: shift_expression
   40                      | relational_expression LESS_THAN shift_expression
   41                      | relational_expression GREATER_THAN shift_expression
   42                      | relational_expression GREATER_THAN_EQUALTO shift_expression
   43                      | relational_expression LESS_THAN_EQUALTO shift_expression

   44 equality_expression: relational_expression
   45                    | equality_expression DOUBLE_EQUAL relational_expression
   46                    | equality_expression NOT_EQUAL relational_expression

   47 AND_expression: equality_expression
   48               | AND_expression AMPERSAND equality_expression

   49 exclusive_or_expression: AND_expression
   50                        | exclusive_or_expression XOR AND_expression

   51 inclusive_or_expression: exclusive_or_expression
   52                        | inclusive_or_expression OR exclusive_or_expression

   53 logical_AND_expression: inclusive_or_expression
   54                       | logical_AND_expression BINARY_AND M inclusive_or_expression

   55 logical_OR_expression: logical_AND_expression
   56                      | logical_OR_expression BINARY_OR M logical_AND_expression

   57 conditional_expression: logical_OR_expression
   58                       | logical_OR_expression N QUESTION_MARK M expression N COLON M conditional_expression

   59 assignment_expression: conditional_expression
   60                      | unary_expression assignment_operator assignment_expression

   61 assignment_operator: EQUAL
   62                    | STAR_EQUAL
   63                    | SLASH_EQUAL
   64                    | PERCENTILE_EQUAL
   65                    | PLUS_EQUAL
   66                    | MINUS_EQUAL
   67                    | LEFT_SHIFT_EQUAL
   68                    | RIGHT_SHIFT_EQUAL
   69                    | AND_EQUAL
   70                    | XOR_EQUAL
   71                    | OR_EQUAL

   72 expression: assignment_expression
   73           | expression COMMA assignment_expression

   74 constant_expression: conditional_expression

   75 declaration: declaration_specifiers SEMI_COLON
   76            | declaration_specifiers init_declarator_list SEMI_COLON

   77 declaration_specifiers: type_specifier
   78                       | type_specifier declaration_specifiers

   79 init_declarator_list: init_declarator
   80                     | init_declarator_list COMMA init_declarator

   81 init_declarator: declarator
   82                | declarator EQUAL initializer

   83 type_specifier: VOID
   84               | CHAR
   85               | SHORT
   86               | INT
   87               | LONG
   88               | FLOAT
   89               | DOUBLE
   90               | MATRIX
   91               | SIGNED
   92               | UNSIGNED
   93               | BOOL

   94 declarator: pointer direct_declarator
   95           | direct_declarator

   96 direct_declarator: IDENTIFIER
   97                  | LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE
   98                  | direct_declarator LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE
   99                  | direct_declarator LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE
  100                  | direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  101                  | direct_declarator LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE
  102                  | direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE

  103 pointer: MULTIPLY
  104        | MULTIPLY pointer

  105 parameter_type_list: parameter_list

  106 parameter_list: parameter_declaration
  107               | parameter_list COMMA parameter_declaration

  108 parameter_declaration: declaration_specifiers declarator
  109                      | declaration_specifiers

  110 identifier_list: IDENTIFIER
  111                | identifier_list COMMA IDENTIFIER

  112 initializer: assignment_expression
  113            | LEFT_CURLY_BRACE initializer_row_list RIGHT_CURLY_BRACE

  114 initializer_row_list: initializer_row
  115                     | initializer_row_list SEMI_COLON initializer_row

  116 initializer_row: designation_opt initializer
  117                | initializer_row COMMA designation_opt initializer

  118 designation_opt: %empty
  119                | designation

  120 designation: designator_list EQUAL

  121 designator_list: designator
  122                | designator_list designator

  123 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE
  124           | PERIOD IDENTIFIER

  125 statement: labeled_statement
  126          | compound_statement
  127          | expression_statement
  128          | selection_statement
  129          | iteration_statement
  130          | jump_statement

  131 labeled_statement: IDENTIFIER COLON statement
  132                  | CASE constant_expression COLON statement
  133                  | DEFAULT COLON statement

  134 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE

  135 block_item_list_opt: %empty
  136                    | block_item_list

  137 block_item_list: block_item
  138                | block_item_list M block_item

  139 block_item: declaration
  140           | statement

  141 expression_statement: expression SEMI_COLON

  142 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N
  143                    | IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE M statement
  144                    | SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

  145 iteration_statement: WHILE M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement
  146                    | DO M statement M WHILE LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMI_COLON
  147                    | FOR LEFT_ROUND_BRACE expression_statement M expression_statement N M expression_opt N RIGHT_ROUND_BRACE M statement
  148                    | FOR LEFT_ROUND_BRACE declaration expression_statement expression_opt RIGHT_ROUND_BRACE statement

  149 jump_statement: GOTO IDENTIFIER SEMI_COLON
  150               | CONTINUE SEMI_COLON
  151               | BREAK SEMI_COLON
  152               | RETURN SEMI_COLON
  153               | RETURN expression SEMI_COLON

  154 expression_opt: %empty
  155               | expression

  156 translation_unit: external_declaration
  157                 | translation_unit external_declaration

  158 external_declaration: function_definition
  159                     | declaration

  160 function_definition: declaration_specifiers declarator declaration_list compound_statement
  161                    | declaration_specifiers declarator O compound_statement

  162 declaration_list: declaration
  163                 | declaration_list declaration

  164 O: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
BREAK (258) 151
CASE (259) 132
CHAR (260) 84
CONTINUE (261) 150
DEFAULT (262) 133
DO (263) 146
DOUBLE (264) 89
SHORT (265) 85
LONG (266) 87
ELSE (267) 143
FLOAT (268) 88
FOR (269) 147 148
GOTO (270) 149
IF (271) 142 143
INT (272) 86
RETURN (273) 152 153
SIGNED (274) 91
SWITCH (275) 144
UNSIGNED (276) 92
VOID (277) 83
WHILE (278) 145 146
BOOL (279) 93
MATRIX (280) 90
COMMENT (281)
IDENTIFIER (282) 3 13 14 96 110 111 124 131 149
INT_NO (283) 4
FLOAT_NO (284) 5
CHARACTER (285) 6
STRING (286) 7
LEFT_SQUARE_BRACE (287) 10 98 99 123
RIGHT_SQUARE_BRACE (288) 10 98 99 123
LEFT_ROUND_BRACE (289) 8 11 12 97 100 101 102 142 143 144 145 146 147
    148
RIGHT_ROUND_BRACE (290) 8 11 12 97 100 101 102 142 143 144 145 146
    147 148
LEFT_CURLY_BRACE (291) 113 134
RIGHT_CURLY_BRACE (292) 113 134
PERIOD (293) 13 124
ARROW (294) 14
INCREMENT (295) 15 21
DECREMENT (296) 16 22
AMPERSAND (297) 24 48
MULTIPLY (298) 25 30 103 104
ADD (299) 26 34
SUBTRACT (300) 27 35
TILDA (301)
NEGATION (302)
DIVIDE (303) 31
PERCENTILE (304) 32
LEFT_SHIFT (305) 37
RIGHT_SHIFT (306) 38
LESS_THAN (307) 40
GREATER_THAN (308) 41
LESS_THAN_EQUALTO (309) 43
GREATER_THAN_EQUALTO (310) 42
DOUBLE_EQUAL (311) 45
NOT_EQUAL (312) 46
XOR (313) 50
OR (314) 52
BINARY_AND (315) 54
BINARY_OR (316) 56
QUESTION_MARK (317) 58
COLON (318) 58 131 132 133
SEMI_COLON (319) 75 76 115 141 146 149 150 151 152 153
EQUAL (320) 61 82 120
STAR_EQUAL (321) 62
SLASH_EQUAL (322) 63
PERCENTILE_EQUAL (323) 64
PLUS_EQUAL (324) 65
MINUS_EQUAL (325) 66
LEFT_SHIFT_EQUAL (326) 67
RIGHT_SHIFT_EQUAL (327) 68
AND_EQUAL (328) 69
XOR_EQUAL (329) 70
OR_EQUAL (330) 71
COMMA (331) 19 73 80 107 111 117
HASH (332)
TRANSPOSE (333) 17
NEWLINE (334)
UNKNOWN (335)
IF_CONFLICT (336)


Nonterminals, with rules where they appear

$accept (82)
    on left: 0
M (83)
    on left: 1, on right: 54 56 58 138 142 143 145 146 147
N (84)
    on left: 2, on right: 58 142 143 145 146 147
primary_expression (85)
    on left: 3 4 5 6 7 8, on right: 9
postfix_expression (86)
    on left: 9 10 11 12 13 14 15 16 17, on right: 10 11 12 13 14 15
    16 17 20
argument_expression_list (87)
    on left: 18 19, on right: 12 19
unary_expression (88)
    on left: 20 21 22 23, on right: 21 22 28 60
unary_operator (89)
    on left: 24 25 26 27, on right: 23
cast_expression (90)
    on left: 28, on right: 23 29 30 31 32
multiplicative_expression (91)
    on left: 29 30 31 32, on right: 30 31 32 33 34 35
additive_expression (92)
    on left: 33 34 35, on right: 34 35 36 37 38
shift_expression (93)
    on left: 36 37 38, on right: 37 38 39 40 41 42 43
relational_expression (94)
    on left: 39 40 41 42 43, on right: 40 41 42 43 44 45 46
equality_expression (95)
    on left: 44 45 46, on right: 45 46 47 48
AND_expression (96)
    on left: 47 48, on right: 48 49 50
exclusive_or_expression (97)
    on left: 49 50, on right: 50 51 52
inclusive_or_expression (98)
    on left: 51 52, on right: 52 53 54
logical_AND_expression (99)
    on left: 53 54, on right: 54 55 56
logical_OR_expression (100)
    on left: 55 56, on right: 56 57 58
conditional_expression (101)
    on left: 57 58, on right: 58 59 74
assignment_expression (102)
    on left: 59 60, on right: 18 19 60 72 73 98 112
assignment_operator (103)
    on left: 61 62 63 64 65 66 67 68 69 70 71, on right: 60
expression (104)
    on left: 72 73, on right: 8 10 58 73 141 142 143 144 145 146 153
    155
constant_expression (105)
    on left: 74, on right: 123 132
declaration (106)
    on left: 75 76, on right: 139 148 159 162 163
declaration_specifiers (107)
    on left: 77 78, on right: 75 76 78 108 109 160 161
init_declarator_list (108)
    on left: 79 80, on right: 76 80
init_declarator (109)
    on left: 81 82, on right: 79 80
type_specifier (110)
    on left: 83 84 85 86 87 88 89 90 91 92 93, on right: 77 78
declarator (111)
    on left: 94 95, on right: 81 82 97 108 160 161
direct_declarator (112)
    on left: 96 97 98 99 100 101 102, on right: 94 95 98 99 100 101
    102
pointer (113)
    on left: 103 104, on right: 94 104
parameter_type_list (114)
    on left: 105, on right: 100
parameter_list (115)
    on left: 106 107, on right: 105 107
parameter_declaration (116)
    on left: 108 109, on right: 106 107
identifier_list (117)
    on left: 110 111, on right: 101 111
initializer (118)
    on left: 112 113, on right: 82 116 117
initializer_row_list (119)
    on left: 114 115, on right: 113 115
initializer_row (120)
    on left: 116 117, on right: 114 115 117
designation_opt (121)
    on left: 118 119, on right: 116 117
designation (122)
    on left: 120, on right: 119
designator_list (123)
    on left: 121 122, on right: 120 122
designator (124)
    on left: 123 124, on right: 121 122
statement (125)
    on left: 125 126 127 128 129 130, on right: 131 132 133 140 142
    143 144 145 146 147 148
labeled_statement (126)
    on left: 131 132 133, on right: 125
compound_statement (127)
    on left: 134, on right: 126 160 161
block_item_list_opt (128)
    on left: 135 136, on right: 134
block_item_list (129)
    on left: 137 138, on right: 136 138
block_item (130)
    on left: 139 140, on right: 137 138
expression_statement (131)
    on left: 141, on right: 127 147 148
selection_statement (132)
    on left: 142 143 144, on right: 128
iteration_statement (133)
    on left: 145 146 147 148, on right: 129
jump_statement (134)
    on left: 149 150 151 152 153, on right: 130
expression_opt (135)
    on left: 154 155, on right: 147 148
translation_unit (136)
    on left: 156 157, on right: 0 157
external_declaration (137)
    on left: 158 159, on right: 156 157
function_definition (138)
    on left: 160 161, on right: 158
declaration_list (139)
    on left: 162 163, on right: 160 163
O (140)
    on left: 164, on right: 161


State 0

    0 $accept: . translation_unit $end

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    declaration             go to state 12
    declaration_specifiers  go to state 13
    type_specifier          go to state 14
    translation_unit        go to state 15
    external_declaration    go to state 16
    function_definition     go to state 17


State 1

   84 type_specifier: CHAR .

    $default  reduce using rule 84 (type_specifier)


State 2

   89 type_specifier: DOUBLE .

    $default  reduce using rule 89 (type_specifier)


State 3

   85 type_specifier: SHORT .

    $default  reduce using rule 85 (type_specifier)


State 4

   87 type_specifier: LONG .

    $default  reduce using rule 87 (type_specifier)


State 5

   88 type_specifier: FLOAT .

    $default  reduce using rule 88 (type_specifier)


State 6

   86 type_specifier: INT .

    $default  reduce using rule 86 (type_specifier)


State 7

   91 type_specifier: SIGNED .

    $default  reduce using rule 91 (type_specifier)


State 8

   92 type_specifier: UNSIGNED .

    $default  reduce using rule 92 (type_specifier)


State 9

   83 type_specifier: VOID .

    $default  reduce using rule 83 (type_specifier)


State 10

   93 type_specifier: BOOL .

    $default  reduce using rule 93 (type_specifier)


State 11

   90 type_specifier: MATRIX .

    $default  reduce using rule 90 (type_specifier)


State 12

  159 external_declaration: declaration .

    $default  reduce using rule 159 (external_declaration)


State 13

   75 declaration: declaration_specifiers . SEMI_COLON
   76            | declaration_specifiers . init_declarator_list SEMI_COLON
  160 function_definition: declaration_specifiers . declarator declaration_list compound_statement
  161                    | declaration_specifiers . declarator O compound_statement

    IDENTIFIER        shift, and go to state 18
    LEFT_ROUND_BRACE  shift, and go to state 19
    MULTIPLY          shift, and go to state 20
    SEMI_COLON        shift, and go to state 21

    init_declarator_list  go to state 22
    init_declarator       go to state 23
    declarator            go to state 24
    direct_declarator     go to state 25
    pointer               go to state 26


State 14

   77 declaration_specifiers: type_specifier .
   78                       | type_specifier . declaration_specifiers

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    $default  reduce using rule 77 (declaration_specifiers)

    declaration_specifiers  go to state 27
    type_specifier          go to state 14


State 15

    0 $accept: translation_unit . $end
  157 translation_unit: translation_unit . external_declaration

    $end      shift, and go to state 28
    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    declaration             go to state 12
    declaration_specifiers  go to state 13
    type_specifier          go to state 14
    external_declaration    go to state 29
    function_definition     go to state 17


State 16

  156 translation_unit: external_declaration .

    $default  reduce using rule 156 (translation_unit)


State 17

  158 external_declaration: function_definition .

    $default  reduce using rule 158 (external_declaration)


State 18

   96 direct_declarator: IDENTIFIER .

    $default  reduce using rule 96 (direct_declarator)


State 19

   97 direct_declarator: LEFT_ROUND_BRACE . declarator RIGHT_ROUND_BRACE

    IDENTIFIER        shift, and go to state 18
    LEFT_ROUND_BRACE  shift, and go to state 19
    MULTIPLY          shift, and go to state 20

    declarator         go to state 30
    direct_declarator  go to state 25
    pointer            go to state 26


State 20

  103 pointer: MULTIPLY .
  104        | MULTIPLY . pointer

    MULTIPLY  shift, and go to state 20

    $default  reduce using rule 103 (pointer)

    pointer  go to state 31


State 21

   75 declaration: declaration_specifiers SEMI_COLON .

    $default  reduce using rule 75 (declaration)


State 22

   76 declaration: declaration_specifiers init_declarator_list . SEMI_COLON
   80 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMI_COLON  shift, and go to state 32
    COMMA       shift, and go to state 33


State 23

   79 init_declarator_list: init_declarator .

    $default  reduce using rule 79 (init_declarator_list)


State 24

   81 init_declarator: declarator .
   82                | declarator . EQUAL initializer
  160 function_definition: declaration_specifiers declarator . declaration_list compound_statement
  161                    | declaration_specifiers declarator . O compound_statement

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11
    EQUAL     shift, and go to state 34

    LEFT_CURLY_BRACE  reduce using rule 164 (O)
    $default          reduce using rule 81 (init_declarator)

    declaration             go to state 35
    declaration_specifiers  go to state 36
    type_specifier          go to state 14
    declaration_list        go to state 37
    O                       go to state 38


State 25

   95 declarator: direct_declarator .
   98 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE
   99                  | direct_declarator . LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE
  100                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  101                  | direct_declarator . LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE
  102                  | direct_declarator . LEFT_ROUND_BRACE RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 39
    LEFT_ROUND_BRACE   shift, and go to state 40

    $default  reduce using rule 95 (declarator)


State 26

   94 declarator: pointer . direct_declarator

    IDENTIFIER        shift, and go to state 18
    LEFT_ROUND_BRACE  shift, and go to state 19

    direct_declarator  go to state 41


State 27

   78 declaration_specifiers: type_specifier declaration_specifiers .

    $default  reduce using rule 78 (declaration_specifiers)


State 28

    0 $accept: translation_unit $end .

    $default  accept


State 29

  157 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 157 (translation_unit)


State 30

   97 direct_declarator: LEFT_ROUND_BRACE declarator . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 42


State 31

  104 pointer: MULTIPLY pointer .

    $default  reduce using rule 104 (pointer)


State 32

   76 declaration: declaration_specifiers init_declarator_list SEMI_COLON .

    $default  reduce using rule 76 (declaration)


State 33

   80 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER        shift, and go to state 18
    LEFT_ROUND_BRACE  shift, and go to state 19
    MULTIPLY          shift, and go to state 20

    init_declarator    go to state 43
    declarator         go to state 44
    direct_declarator  go to state 25
    pointer            go to state 26


State 34

   82 init_declarator: declarator EQUAL . initializer

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 51
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 74
    initializer                go to state 75


State 35

  162 declaration_list: declaration .

    $default  reduce using rule 162 (declaration_list)


State 36

   75 declaration: declaration_specifiers . SEMI_COLON
   76            | declaration_specifiers . init_declarator_list SEMI_COLON

    IDENTIFIER        shift, and go to state 18
    LEFT_ROUND_BRACE  shift, and go to state 19
    MULTIPLY          shift, and go to state 20
    SEMI_COLON        shift, and go to state 21

    init_declarator_list  go to state 22
    init_declarator       go to state 23
    declarator            go to state 44
    direct_declarator     go to state 25
    pointer               go to state 26


State 37

  160 function_definition: declaration_specifiers declarator declaration_list . compound_statement
  163 declaration_list: declaration_list . declaration

    CHAR              shift, and go to state 1
    DOUBLE            shift, and go to state 2
    SHORT             shift, and go to state 3
    LONG              shift, and go to state 4
    FLOAT             shift, and go to state 5
    INT               shift, and go to state 6
    SIGNED            shift, and go to state 7
    UNSIGNED          shift, and go to state 8
    VOID              shift, and go to state 9
    BOOL              shift, and go to state 10
    MATRIX            shift, and go to state 11
    LEFT_CURLY_BRACE  shift, and go to state 76

    declaration             go to state 77
    declaration_specifiers  go to state 36
    type_specifier          go to state 14
    compound_statement      go to state 78


State 38

  161 function_definition: declaration_specifiers declarator O . compound_statement

    LEFT_CURLY_BRACE  shift, and go to state 76

    compound_statement  go to state 79


State 39

   98 direct_declarator: direct_declarator LEFT_SQUARE_BRACE . assignment_expression RIGHT_SQUARE_BRACE
   99                  | direct_declarator LEFT_SQUARE_BRACE . RIGHT_SQUARE_BRACE

    IDENTIFIER          shift, and go to state 45
    INT_NO              shift, and go to state 46
    FLOAT_NO            shift, and go to state 47
    CHARACTER           shift, and go to state 48
    STRING              shift, and go to state 49
    RIGHT_SQUARE_BRACE  shift, and go to state 80
    LEFT_ROUND_BRACE    shift, and go to state 50
    INCREMENT           shift, and go to state 52
    DECREMENT           shift, and go to state 53
    AMPERSAND           shift, and go to state 54
    MULTIPLY            shift, and go to state 55
    ADD                 shift, and go to state 56
    SUBTRACT            shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 81


State 40

  100 direct_declarator: direct_declarator LEFT_ROUND_BRACE . parameter_type_list RIGHT_ROUND_BRACE
  101                  | direct_declarator LEFT_ROUND_BRACE . identifier_list RIGHT_ROUND_BRACE
  102                  | direct_declarator LEFT_ROUND_BRACE . RIGHT_ROUND_BRACE

    CHAR               shift, and go to state 1
    DOUBLE             shift, and go to state 2
    SHORT              shift, and go to state 3
    LONG               shift, and go to state 4
    FLOAT              shift, and go to state 5
    INT                shift, and go to state 6
    SIGNED             shift, and go to state 7
    UNSIGNED           shift, and go to state 8
    VOID               shift, and go to state 9
    BOOL               shift, and go to state 10
    MATRIX             shift, and go to state 11
    IDENTIFIER         shift, and go to state 82
    RIGHT_ROUND_BRACE  shift, and go to state 83

    declaration_specifiers  go to state 84
    type_specifier          go to state 14
    parameter_type_list     go to state 85
    parameter_list          go to state 86
    parameter_declaration   go to state 87
    identifier_list         go to state 88


State 41

   94 declarator: pointer direct_declarator .
   98 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE
   99                  | direct_declarator . LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE
  100                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  101                  | direct_declarator . LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE
  102                  | direct_declarator . LEFT_ROUND_BRACE RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 39
    LEFT_ROUND_BRACE   shift, and go to state 40

    $default  reduce using rule 94 (declarator)


State 42

   97 direct_declarator: LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE .

    $default  reduce using rule 97 (direct_declarator)


State 43

   80 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 80 (init_declarator_list)


State 44

   81 init_declarator: declarator .
   82                | declarator . EQUAL initializer

    EQUAL  shift, and go to state 34

    $default  reduce using rule 81 (init_declarator)


State 45

    3 primary_expression: IDENTIFIER .

    $default  reduce using rule 3 (primary_expression)


State 46

    4 primary_expression: INT_NO .

    $default  reduce using rule 4 (primary_expression)


State 47

    5 primary_expression: FLOAT_NO .

    $default  reduce using rule 5 (primary_expression)


State 48

    6 primary_expression: CHARACTER .

    $default  reduce using rule 6 (primary_expression)


State 49

    7 primary_expression: STRING .

    $default  reduce using rule 7 (primary_expression)


State 50

    8 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 90


State 51

  113 initializer: LEFT_CURLY_BRACE . initializer_row_list RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 91
    PERIOD             shift, and go to state 92

    $default  reduce using rule 118 (designation_opt)

    initializer_row_list  go to state 93
    initializer_row       go to state 94
    designation_opt       go to state 95
    designation           go to state 96
    designator_list       go to state 97
    designator            go to state 98


State 52

   21 unary_expression: INCREMENT . unary_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression  go to state 58
    postfix_expression  go to state 59
    unary_expression    go to state 99
    unary_operator      go to state 61


State 53

   22 unary_expression: DECREMENT . unary_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression  go to state 58
    postfix_expression  go to state 59
    unary_expression    go to state 100
    unary_operator      go to state 61


State 54

   24 unary_operator: AMPERSAND .

    $default  reduce using rule 24 (unary_operator)


State 55

   25 unary_operator: MULTIPLY .

    $default  reduce using rule 25 (unary_operator)


State 56

   26 unary_operator: ADD .

    $default  reduce using rule 26 (unary_operator)


State 57

   27 unary_operator: SUBTRACT .

    $default  reduce using rule 27 (unary_operator)


State 58

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 59

   10 postfix_expression: postfix_expression . LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
   11                   | postfix_expression . LEFT_ROUND_BRACE RIGHT_ROUND_BRACE
   12                   | postfix_expression . LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE
   13                   | postfix_expression . PERIOD IDENTIFIER
   14                   | postfix_expression . ARROW IDENTIFIER
   15                   | postfix_expression . INCREMENT
   16                   | postfix_expression . DECREMENT
   17                   | postfix_expression . TRANSPOSE
   20 unary_expression: postfix_expression .

    LEFT_SQUARE_BRACE  shift, and go to state 101
    LEFT_ROUND_BRACE   shift, and go to state 102
    PERIOD             shift, and go to state 103
    ARROW              shift, and go to state 104
    INCREMENT          shift, and go to state 105
    DECREMENT          shift, and go to state 106
    TRANSPOSE          shift, and go to state 107

    $default  reduce using rule 20 (unary_expression)


State 60

   28 cast_expression: unary_expression .
   60 assignment_expression: unary_expression . assignment_operator assignment_expression

    EQUAL              shift, and go to state 108
    STAR_EQUAL         shift, and go to state 109
    SLASH_EQUAL        shift, and go to state 110
    PERCENTILE_EQUAL   shift, and go to state 111
    PLUS_EQUAL         shift, and go to state 112
    MINUS_EQUAL        shift, and go to state 113
    LEFT_SHIFT_EQUAL   shift, and go to state 114
    RIGHT_SHIFT_EQUAL  shift, and go to state 115
    AND_EQUAL          shift, and go to state 116
    XOR_EQUAL          shift, and go to state 117
    OR_EQUAL           shift, and go to state 118

    $default  reduce using rule 28 (cast_expression)

    assignment_operator  go to state 119


State 61

   23 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression  go to state 58
    postfix_expression  go to state 59
    unary_expression    go to state 120
    unary_operator      go to state 61
    cast_expression     go to state 121


State 62

   29 multiplicative_expression: cast_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 63

   30 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   31                          | multiplicative_expression . DIVIDE cast_expression
   32                          | multiplicative_expression . PERCENTILE cast_expression
   33 additive_expression: multiplicative_expression .

    MULTIPLY    shift, and go to state 122
    DIVIDE      shift, and go to state 123
    PERCENTILE  shift, and go to state 124

    $default  reduce using rule 33 (additive_expression)


State 64

   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUBTRACT multiplicative_expression
   36 shift_expression: additive_expression .

    ADD       shift, and go to state 125
    SUBTRACT  shift, and go to state 126

    $default  reduce using rule 36 (shift_expression)


State 65

   37 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   38                 | shift_expression . RIGHT_SHIFT additive_expression
   39 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 127
    RIGHT_SHIFT  shift, and go to state 128

    $default  reduce using rule 39 (relational_expression)


State 66

   40 relational_expression: relational_expression . LESS_THAN shift_expression
   41                      | relational_expression . GREATER_THAN shift_expression
   42                      | relational_expression . GREATER_THAN_EQUALTO shift_expression
   43                      | relational_expression . LESS_THAN_EQUALTO shift_expression
   44 equality_expression: relational_expression .

    LESS_THAN             shift, and go to state 129
    GREATER_THAN          shift, and go to state 130
    LESS_THAN_EQUALTO     shift, and go to state 131
    GREATER_THAN_EQUALTO  shift, and go to state 132

    $default  reduce using rule 44 (equality_expression)


State 67

   45 equality_expression: equality_expression . DOUBLE_EQUAL relational_expression
   46                    | equality_expression . NOT_EQUAL relational_expression
   47 AND_expression: equality_expression .

    DOUBLE_EQUAL  shift, and go to state 133
    NOT_EQUAL     shift, and go to state 134

    $default  reduce using rule 47 (AND_expression)


State 68

   48 AND_expression: AND_expression . AMPERSAND equality_expression
   49 exclusive_or_expression: AND_expression .

    AMPERSAND  shift, and go to state 135

    $default  reduce using rule 49 (exclusive_or_expression)


State 69

   50 exclusive_or_expression: exclusive_or_expression . XOR AND_expression
   51 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 136

    $default  reduce using rule 51 (inclusive_or_expression)


State 70

   52 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
   53 logical_AND_expression: inclusive_or_expression .

    OR  shift, and go to state 137

    $default  reduce using rule 53 (logical_AND_expression)


State 71

   54 logical_AND_expression: logical_AND_expression . BINARY_AND M inclusive_or_expression
   55 logical_OR_expression: logical_AND_expression .

    BINARY_AND  shift, and go to state 138

    $default  reduce using rule 55 (logical_OR_expression)


State 72

   56 logical_OR_expression: logical_OR_expression . BINARY_OR M logical_AND_expression
   57 conditional_expression: logical_OR_expression .
   58                       | logical_OR_expression . N QUESTION_MARK M expression N COLON M conditional_expression

    BINARY_OR  shift, and go to state 139

    QUESTION_MARK  reduce using rule 2 (N)
    $default       reduce using rule 57 (conditional_expression)

    N  go to state 140


State 73

   59 assignment_expression: conditional_expression .

    $default  reduce using rule 59 (assignment_expression)


State 74

  112 initializer: assignment_expression .

    $default  reduce using rule 112 (initializer)


State 75

   82 init_declarator: declarator EQUAL initializer .

    $default  reduce using rule 82 (init_declarator)


State 76

  134 compound_statement: LEFT_CURLY_BRACE . block_item_list_opt RIGHT_CURLY_BRACE

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    DOUBLE            shift, and go to state 2
    SHORT             shift, and go to state 3
    LONG              shift, and go to state 4
    FLOAT             shift, and go to state 5
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    INT               shift, and go to state 6
    RETURN            shift, and go to state 149
    SIGNED            shift, and go to state 7
    SWITCH            shift, and go to state 150
    UNSIGNED          shift, and go to state 8
    VOID              shift, and go to state 9
    WHILE             shift, and go to state 151
    BOOL              shift, and go to state 10
    MATRIX            shift, and go to state 11
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    $default  reduce using rule 135 (block_item_list_opt)

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    declaration                go to state 154
    declaration_specifiers     go to state 36
    type_specifier             go to state 14
    statement                  go to state 155
    labeled_statement          go to state 156
    compound_statement         go to state 157
    block_item_list_opt        go to state 158
    block_item_list            go to state 159
    block_item                 go to state 160
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 77

  163 declaration_list: declaration_list declaration .

    $default  reduce using rule 163 (declaration_list)


State 78

  160 function_definition: declaration_specifiers declarator declaration_list compound_statement .

    $default  reduce using rule 160 (function_definition)


State 79

  161 function_definition: declaration_specifiers declarator O compound_statement .

    $default  reduce using rule 161 (function_definition)


State 80

   99 direct_declarator: direct_declarator LEFT_SQUARE_BRACE RIGHT_SQUARE_BRACE .

    $default  reduce using rule 99 (direct_declarator)


State 81

   98 direct_declarator: direct_declarator LEFT_SQUARE_BRACE assignment_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 165


State 82

  110 identifier_list: IDENTIFIER .

    $default  reduce using rule 110 (identifier_list)


State 83

  102 direct_declarator: direct_declarator LEFT_ROUND_BRACE RIGHT_ROUND_BRACE .

    $default  reduce using rule 102 (direct_declarator)


State 84

  108 parameter_declaration: declaration_specifiers . declarator
  109                      | declaration_specifiers .

    IDENTIFIER        shift, and go to state 18
    LEFT_ROUND_BRACE  shift, and go to state 19
    MULTIPLY          shift, and go to state 20

    $default  reduce using rule 109 (parameter_declaration)

    declarator         go to state 166
    direct_declarator  go to state 25
    pointer            go to state 26


State 85

  100 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 167


State 86

  105 parameter_type_list: parameter_list .
  107 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 168

    $default  reduce using rule 105 (parameter_type_list)


State 87

  106 parameter_list: parameter_declaration .

    $default  reduce using rule 106 (parameter_list)


State 88

  101 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list . RIGHT_ROUND_BRACE
  111 identifier_list: identifier_list . COMMA IDENTIFIER

    RIGHT_ROUND_BRACE  shift, and go to state 169
    COMMA              shift, and go to state 170


State 89

   72 expression: assignment_expression .

    $default  reduce using rule 72 (expression)


State 90

    8 primary_expression: LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE
   73 expression: expression . COMMA assignment_expression

    RIGHT_ROUND_BRACE  shift, and go to state 171
    COMMA              shift, and go to state 172


State 91

  123 designator: LEFT_SQUARE_BRACE . constant_expression RIGHT_SQUARE_BRACE

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 173
    constant_expression        go to state 174


State 92

  124 designator: PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 175


State 93

  113 initializer: LEFT_CURLY_BRACE initializer_row_list . RIGHT_CURLY_BRACE
  115 initializer_row_list: initializer_row_list . SEMI_COLON initializer_row

    RIGHT_CURLY_BRACE  shift, and go to state 176
    SEMI_COLON         shift, and go to state 177


State 94

  114 initializer_row_list: initializer_row .
  117 initializer_row: initializer_row . COMMA designation_opt initializer

    COMMA  shift, and go to state 178

    $default  reduce using rule 114 (initializer_row_list)


State 95

  116 initializer_row: designation_opt . initializer

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 51
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 74
    initializer                go to state 179


State 96

  119 designation_opt: designation .

    $default  reduce using rule 119 (designation_opt)


State 97

  120 designation: designator_list . EQUAL
  122 designator_list: designator_list . designator

    LEFT_SQUARE_BRACE  shift, and go to state 91
    PERIOD             shift, and go to state 92
    EQUAL              shift, and go to state 180

    designator  go to state 181


State 98

  121 designator_list: designator .

    $default  reduce using rule 121 (designator_list)


State 99

   21 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 100

   22 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 101

   10 postfix_expression: postfix_expression LEFT_SQUARE_BRACE . expression RIGHT_SQUARE_BRACE

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 182


State 102

   11 postfix_expression: postfix_expression LEFT_ROUND_BRACE . RIGHT_ROUND_BRACE
   12                   | postfix_expression LEFT_ROUND_BRACE . argument_expression_list RIGHT_ROUND_BRACE

    IDENTIFIER         shift, and go to state 45
    INT_NO             shift, and go to state 46
    FLOAT_NO           shift, and go to state 47
    CHARACTER          shift, and go to state 48
    STRING             shift, and go to state 49
    LEFT_ROUND_BRACE   shift, and go to state 50
    RIGHT_ROUND_BRACE  shift, and go to state 183
    INCREMENT          shift, and go to state 52
    DECREMENT          shift, and go to state 53
    AMPERSAND          shift, and go to state 54
    MULTIPLY           shift, and go to state 55
    ADD                shift, and go to state 56
    SUBTRACT           shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    argument_expression_list   go to state 184
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 185


State 103

   13 postfix_expression: postfix_expression PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 186


State 104

   14 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 187


State 105

   15 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 15 (postfix_expression)


State 106

   16 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 16 (postfix_expression)


State 107

   17 postfix_expression: postfix_expression TRANSPOSE .

    $default  reduce using rule 17 (postfix_expression)


State 108

   61 assignment_operator: EQUAL .

    $default  reduce using rule 61 (assignment_operator)


State 109

   62 assignment_operator: STAR_EQUAL .

    $default  reduce using rule 62 (assignment_operator)


State 110

   63 assignment_operator: SLASH_EQUAL .

    $default  reduce using rule 63 (assignment_operator)


State 111

   64 assignment_operator: PERCENTILE_EQUAL .

    $default  reduce using rule 64 (assignment_operator)


State 112

   65 assignment_operator: PLUS_EQUAL .

    $default  reduce using rule 65 (assignment_operator)


State 113

   66 assignment_operator: MINUS_EQUAL .

    $default  reduce using rule 66 (assignment_operator)


State 114

   67 assignment_operator: LEFT_SHIFT_EQUAL .

    $default  reduce using rule 67 (assignment_operator)


State 115

   68 assignment_operator: RIGHT_SHIFT_EQUAL .

    $default  reduce using rule 68 (assignment_operator)


State 116

   69 assignment_operator: AND_EQUAL .

    $default  reduce using rule 69 (assignment_operator)


State 117

   70 assignment_operator: XOR_EQUAL .

    $default  reduce using rule 70 (assignment_operator)


State 118

   71 assignment_operator: OR_EQUAL .

    $default  reduce using rule 71 (assignment_operator)


State 119

   60 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 188


State 120

   28 cast_expression: unary_expression .

    $default  reduce using rule 28 (cast_expression)


State 121

   23 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 23 (unary_expression)


State 122

   30 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression  go to state 58
    postfix_expression  go to state 59
    unary_expression    go to state 120
    unary_operator      go to state 61
    cast_expression     go to state 189


State 123

   31 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression  go to state 58
    postfix_expression  go to state 59
    unary_expression    go to state 120
    unary_operator      go to state 61
    cast_expression     go to state 190


State 124

   32 multiplicative_expression: multiplicative_expression PERCENTILE . cast_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression  go to state 58
    postfix_expression  go to state 59
    unary_expression    go to state 120
    unary_operator      go to state 61
    cast_expression     go to state 191


State 125

   34 additive_expression: additive_expression ADD . multiplicative_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 192


State 126

   35 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 193


State 127

   37 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 194


State 128

   38 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 195


State 129

   40 relational_expression: relational_expression LESS_THAN . shift_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 196


State 130

   41 relational_expression: relational_expression GREATER_THAN . shift_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 197


State 131

   43 relational_expression: relational_expression LESS_THAN_EQUALTO . shift_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 198


State 132

   42 relational_expression: relational_expression GREATER_THAN_EQUALTO . shift_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 199


State 133

   45 equality_expression: equality_expression DOUBLE_EQUAL . relational_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 200


State 134

   46 equality_expression: equality_expression NOT_EQUAL . relational_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 201


State 135

   48 AND_expression: AND_expression AMPERSAND . equality_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 202


State 136

   50 exclusive_or_expression: exclusive_or_expression XOR . AND_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 203


State 137

   52 inclusive_or_expression: inclusive_or_expression OR . exclusive_or_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 204


State 138

   54 logical_AND_expression: logical_AND_expression BINARY_AND . M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 205


State 139

   56 logical_OR_expression: logical_OR_expression BINARY_OR . M logical_AND_expression

    $default  reduce using rule 1 (M)

    M  go to state 206


State 140

   58 conditional_expression: logical_OR_expression N . QUESTION_MARK M expression N COLON M conditional_expression

    QUESTION_MARK  shift, and go to state 207


State 141

  151 jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 208


State 142

  132 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 173
    constant_expression        go to state 209


State 143

  150 jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 210


State 144

  133 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 211


State 145

  146 iteration_statement: DO . M statement M WHILE LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMI_COLON

    $default  reduce using rule 1 (M)

    M  go to state 212


State 146

  147 iteration_statement: FOR . LEFT_ROUND_BRACE expression_statement M expression_statement N M expression_opt N RIGHT_ROUND_BRACE M statement
  148                    | FOR . LEFT_ROUND_BRACE declaration expression_statement expression_opt RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 213


State 147

  149 jump_statement: GOTO . IDENTIFIER SEMI_COLON

    IDENTIFIER  shift, and go to state 214


State 148

  142 selection_statement: IF . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N
  143                    | IF . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE M statement

    LEFT_ROUND_BRACE  shift, and go to state 215


State 149

  152 jump_statement: RETURN . SEMI_COLON
  153               | RETURN . expression SEMI_COLON

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57
    SEMI_COLON        shift, and go to state 216

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 217


State 150

  144 selection_statement: SWITCH . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 218


State 151

  145 iteration_statement: WHILE . M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 1 (M)

    M  go to state 219


State 152

    3 primary_expression: IDENTIFIER .
  131 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 220

    $default  reduce using rule 3 (primary_expression)


State 153

   73 expression: expression . COMMA assignment_expression
  141 expression_statement: expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 221
    COMMA       shift, and go to state 172


State 154

  139 block_item: declaration .

    $default  reduce using rule 139 (block_item)


State 155

  140 block_item: statement .

    $default  reduce using rule 140 (block_item)


State 156

  125 statement: labeled_statement .

    $default  reduce using rule 125 (statement)


State 157

  126 statement: compound_statement .

    $default  reduce using rule 126 (statement)


State 158

  134 compound_statement: LEFT_CURLY_BRACE block_item_list_opt . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 222


State 159

  136 block_item_list_opt: block_item_list .
  138 block_item_list: block_item_list . M block_item

    RIGHT_CURLY_BRACE  reduce using rule 136 (block_item_list_opt)
    $default           reduce using rule 1 (M)

    M  go to state 223


State 160

  137 block_item_list: block_item .

    $default  reduce using rule 137 (block_item_list)


State 161

  127 statement: expression_statement .

    $default  reduce using rule 127 (statement)


State 162

  128 statement: selection_statement .

    $default  reduce using rule 128 (statement)


State 163

  129 statement: iteration_statement .

    $default  reduce using rule 129 (statement)


State 164

  130 statement: jump_statement .

    $default  reduce using rule 130 (statement)


State 165

   98 direct_declarator: direct_declarator LEFT_SQUARE_BRACE assignment_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 98 (direct_declarator)


State 166

  108 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 108 (parameter_declaration)


State 167

  100 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 100 (direct_declarator)


State 168

  107 parameter_list: parameter_list COMMA . parameter_declaration

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    declaration_specifiers  go to state 84
    type_specifier          go to state 14
    parameter_declaration   go to state 224


State 169

  101 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 101 (direct_declarator)


State 170

  111 identifier_list: identifier_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 225


State 171

    8 primary_expression: LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE .

    $default  reduce using rule 8 (primary_expression)


State 172

   73 expression: expression COMMA . assignment_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 226


State 173

   74 constant_expression: conditional_expression .

    $default  reduce using rule 74 (constant_expression)


State 174

  123 designator: LEFT_SQUARE_BRACE constant_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 227


State 175

  124 designator: PERIOD IDENTIFIER .

    $default  reduce using rule 124 (designator)


State 176

  113 initializer: LEFT_CURLY_BRACE initializer_row_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 113 (initializer)


State 177

  115 initializer_row_list: initializer_row_list SEMI_COLON . initializer_row

    LEFT_SQUARE_BRACE  shift, and go to state 91
    PERIOD             shift, and go to state 92

    $default  reduce using rule 118 (designation_opt)

    initializer_row  go to state 228
    designation_opt  go to state 95
    designation      go to state 96
    designator_list  go to state 97
    designator       go to state 98


State 178

  117 initializer_row: initializer_row COMMA . designation_opt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 91
    PERIOD             shift, and go to state 92

    $default  reduce using rule 118 (designation_opt)

    designation_opt  go to state 229
    designation      go to state 96
    designator_list  go to state 97
    designator       go to state 98


State 179

  116 initializer_row: designation_opt initializer .

    $default  reduce using rule 116 (initializer_row)


State 180

  120 designation: designator_list EQUAL .

    $default  reduce using rule 120 (designation)


State 181

  122 designator_list: designator_list designator .

    $default  reduce using rule 122 (designator_list)


State 182

   10 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression . RIGHT_SQUARE_BRACE
   73 expression: expression . COMMA assignment_expression

    RIGHT_SQUARE_BRACE  shift, and go to state 230
    COMMA               shift, and go to state 172


State 183

   11 postfix_expression: postfix_expression LEFT_ROUND_BRACE RIGHT_ROUND_BRACE .

    $default  reduce using rule 11 (postfix_expression)


State 184

   12 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list . RIGHT_ROUND_BRACE
   19 argument_expression_list: argument_expression_list . COMMA assignment_expression

    RIGHT_ROUND_BRACE  shift, and go to state 231
    COMMA              shift, and go to state 232


State 185

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 186

   13 postfix_expression: postfix_expression PERIOD IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 187

   14 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 14 (postfix_expression)


State 188

   60 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 60 (assignment_expression)


State 189

   30 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 190

   31 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 191

   32 multiplicative_expression: multiplicative_expression PERCENTILE cast_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 192

   30 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   31                          | multiplicative_expression . DIVIDE cast_expression
   32                          | multiplicative_expression . PERCENTILE cast_expression
   34 additive_expression: additive_expression ADD multiplicative_expression .

    MULTIPLY    shift, and go to state 122
    DIVIDE      shift, and go to state 123
    PERCENTILE  shift, and go to state 124

    $default  reduce using rule 34 (additive_expression)


State 193

   30 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   31                          | multiplicative_expression . DIVIDE cast_expression
   32                          | multiplicative_expression . PERCENTILE cast_expression
   35 additive_expression: additive_expression SUBTRACT multiplicative_expression .

    MULTIPLY    shift, and go to state 122
    DIVIDE      shift, and go to state 123
    PERCENTILE  shift, and go to state 124

    $default  reduce using rule 35 (additive_expression)


State 194

   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUBTRACT multiplicative_expression
   37 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    ADD       shift, and go to state 125
    SUBTRACT  shift, and go to state 126

    $default  reduce using rule 37 (shift_expression)


State 195

   34 additive_expression: additive_expression . ADD multiplicative_expression
   35                    | additive_expression . SUBTRACT multiplicative_expression
   38 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    ADD       shift, and go to state 125
    SUBTRACT  shift, and go to state 126

    $default  reduce using rule 38 (shift_expression)


State 196

   37 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   38                 | shift_expression . RIGHT_SHIFT additive_expression
   40 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 127
    RIGHT_SHIFT  shift, and go to state 128

    $default  reduce using rule 40 (relational_expression)


State 197

   37 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   38                 | shift_expression . RIGHT_SHIFT additive_expression
   41 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 127
    RIGHT_SHIFT  shift, and go to state 128

    $default  reduce using rule 41 (relational_expression)


State 198

   37 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   38                 | shift_expression . RIGHT_SHIFT additive_expression
   43 relational_expression: relational_expression LESS_THAN_EQUALTO shift_expression .

    LEFT_SHIFT   shift, and go to state 127
    RIGHT_SHIFT  shift, and go to state 128

    $default  reduce using rule 43 (relational_expression)


State 199

   37 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   38                 | shift_expression . RIGHT_SHIFT additive_expression
   42 relational_expression: relational_expression GREATER_THAN_EQUALTO shift_expression .

    LEFT_SHIFT   shift, and go to state 127
    RIGHT_SHIFT  shift, and go to state 128

    $default  reduce using rule 42 (relational_expression)


State 200

   40 relational_expression: relational_expression . LESS_THAN shift_expression
   41                      | relational_expression . GREATER_THAN shift_expression
   42                      | relational_expression . GREATER_THAN_EQUALTO shift_expression
   43                      | relational_expression . LESS_THAN_EQUALTO shift_expression
   45 equality_expression: equality_expression DOUBLE_EQUAL relational_expression .

    LESS_THAN             shift, and go to state 129
    GREATER_THAN          shift, and go to state 130
    LESS_THAN_EQUALTO     shift, and go to state 131
    GREATER_THAN_EQUALTO  shift, and go to state 132

    $default  reduce using rule 45 (equality_expression)


State 201

   40 relational_expression: relational_expression . LESS_THAN shift_expression
   41                      | relational_expression . GREATER_THAN shift_expression
   42                      | relational_expression . GREATER_THAN_EQUALTO shift_expression
   43                      | relational_expression . LESS_THAN_EQUALTO shift_expression
   46 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN             shift, and go to state 129
    GREATER_THAN          shift, and go to state 130
    LESS_THAN_EQUALTO     shift, and go to state 131
    GREATER_THAN_EQUALTO  shift, and go to state 132

    $default  reduce using rule 46 (equality_expression)


State 202

   45 equality_expression: equality_expression . DOUBLE_EQUAL relational_expression
   46                    | equality_expression . NOT_EQUAL relational_expression
   48 AND_expression: AND_expression AMPERSAND equality_expression .

    DOUBLE_EQUAL  shift, and go to state 133
    NOT_EQUAL     shift, and go to state 134

    $default  reduce using rule 48 (AND_expression)


State 203

   48 AND_expression: AND_expression . AMPERSAND equality_expression
   50 exclusive_or_expression: exclusive_or_expression XOR AND_expression .

    AMPERSAND  shift, and go to state 135

    $default  reduce using rule 50 (exclusive_or_expression)


State 204

   50 exclusive_or_expression: exclusive_or_expression . XOR AND_expression
   52 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression .

    XOR  shift, and go to state 136

    $default  reduce using rule 52 (inclusive_or_expression)


State 205

   54 logical_AND_expression: logical_AND_expression BINARY_AND M . inclusive_or_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 233


State 206

   56 logical_OR_expression: logical_OR_expression BINARY_OR M . logical_AND_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 234


State 207

   58 conditional_expression: logical_OR_expression N QUESTION_MARK . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 235


State 208

  151 jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 151 (jump_statement)


State 209

  132 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 236


State 210

  150 jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 150 (jump_statement)


State 211

  133 labeled_statement: DEFAULT COLON . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 237
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 212

  146 iteration_statement: DO M . statement M WHILE LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMI_COLON

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 238
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 213

  147 iteration_statement: FOR LEFT_ROUND_BRACE . expression_statement M expression_statement N M expression_opt N RIGHT_ROUND_BRACE M statement
  148                    | FOR LEFT_ROUND_BRACE . declaration expression_statement expression_opt RIGHT_ROUND_BRACE statement

    CHAR              shift, and go to state 1
    DOUBLE            shift, and go to state 2
    SHORT             shift, and go to state 3
    LONG              shift, and go to state 4
    FLOAT             shift, and go to state 5
    INT               shift, and go to state 6
    SIGNED            shift, and go to state 7
    UNSIGNED          shift, and go to state 8
    VOID              shift, and go to state 9
    BOOL              shift, and go to state 10
    MATRIX            shift, and go to state 11
    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    declaration                go to state 239
    declaration_specifiers     go to state 36
    type_specifier             go to state 14
    expression_statement       go to state 240


State 214

  149 jump_statement: GOTO IDENTIFIER . SEMI_COLON

    SEMI_COLON  shift, and go to state 241


State 215

  142 selection_statement: IF LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE M statement N
  143                    | IF LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE M statement N ELSE M statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 242


State 216

  152 jump_statement: RETURN SEMI_COLON .

    $default  reduce using rule 152 (jump_statement)


State 217

   73 expression: expression . COMMA assignment_expression
  153 jump_statement: RETURN expression . SEMI_COLON

    SEMI_COLON  shift, and go to state 243
    COMMA       shift, and go to state 172


State 218

  144 selection_statement: SWITCH LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 244


State 219

  145 iteration_statement: WHILE M . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement

    LEFT_ROUND_BRACE  shift, and go to state 245


State 220

  131 labeled_statement: IDENTIFIER COLON . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 246
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 221

  141 expression_statement: expression SEMI_COLON .

    $default  reduce using rule 141 (expression_statement)


State 222

  134 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE .

    $default  reduce using rule 134 (compound_statement)


State 223

  138 block_item_list: block_item_list M . block_item

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    DOUBLE            shift, and go to state 2
    SHORT             shift, and go to state 3
    LONG              shift, and go to state 4
    FLOAT             shift, and go to state 5
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    INT               shift, and go to state 6
    RETURN            shift, and go to state 149
    SIGNED            shift, and go to state 7
    SWITCH            shift, and go to state 150
    UNSIGNED          shift, and go to state 8
    VOID              shift, and go to state 9
    WHILE             shift, and go to state 151
    BOOL              shift, and go to state 10
    MATRIX            shift, and go to state 11
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    declaration                go to state 154
    declaration_specifiers     go to state 36
    type_specifier             go to state 14
    statement                  go to state 155
    labeled_statement          go to state 156
    compound_statement         go to state 157
    block_item                 go to state 247
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 224

  107 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 107 (parameter_list)


State 225

  111 identifier_list: identifier_list COMMA IDENTIFIER .

    $default  reduce using rule 111 (identifier_list)


State 226

   73 expression: expression COMMA assignment_expression .

    $default  reduce using rule 73 (expression)


State 227

  123 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 123 (designator)


State 228

  115 initializer_row_list: initializer_row_list SEMI_COLON initializer_row .
  117 initializer_row: initializer_row . COMMA designation_opt initializer

    COMMA  shift, and go to state 178

    $default  reduce using rule 115 (initializer_row_list)


State 229

  117 initializer_row: initializer_row COMMA designation_opt . initializer

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 51
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 74
    initializer                go to state 248


State 230

   10 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 10 (postfix_expression)


State 231

   12 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 12 (postfix_expression)


State 232

   19 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 249


State 233

   52 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
   54 logical_AND_expression: logical_AND_expression BINARY_AND M inclusive_or_expression .

    OR  shift, and go to state 137

    $default  reduce using rule 54 (logical_AND_expression)


State 234

   54 logical_AND_expression: logical_AND_expression . BINARY_AND M inclusive_or_expression
   56 logical_OR_expression: logical_OR_expression BINARY_OR M logical_AND_expression .

    BINARY_AND  shift, and go to state 138

    $default  reduce using rule 56 (logical_OR_expression)


State 235

   58 conditional_expression: logical_OR_expression N QUESTION_MARK M . expression N COLON M conditional_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 250


State 236

  132 labeled_statement: CASE constant_expression COLON . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 251
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 237

  133 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 133 (labeled_statement)


State 238

  146 iteration_statement: DO M statement . M WHILE LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMI_COLON

    $default  reduce using rule 1 (M)

    M  go to state 252


State 239

  148 iteration_statement: FOR LEFT_ROUND_BRACE declaration . expression_statement expression_opt RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    expression_statement       go to state 253


State 240

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement . M expression_statement N M expression_opt N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 1 (M)

    M  go to state 254


State 241

  149 jump_statement: GOTO IDENTIFIER SEMI_COLON .

    $default  reduce using rule 149 (jump_statement)


State 242

   73 expression: expression . COMMA assignment_expression
  142 selection_statement: IF LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE M statement N
  143                    | IF LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE M statement N ELSE M statement

    COMMA  shift, and go to state 172

    $default  reduce using rule 2 (N)

    N  go to state 255


State 243

  153 jump_statement: RETURN expression SEMI_COLON .

    $default  reduce using rule 153 (jump_statement)


State 244

   73 expression: expression . COMMA assignment_expression
  144 selection_statement: SWITCH LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 256
    COMMA              shift, and go to state 172


State 245

  145 iteration_statement: WHILE M LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE M statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 257


State 246

  131 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 131 (labeled_statement)


State 247

  138 block_item_list: block_item_list M block_item .

    $default  reduce using rule 138 (block_item_list)


State 248

  117 initializer_row: initializer_row COMMA designation_opt initializer .

    $default  reduce using rule 117 (initializer_row)


State 249

   19 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 250

   58 conditional_expression: logical_OR_expression N QUESTION_MARK M expression . N COLON M conditional_expression
   73 expression: expression . COMMA assignment_expression

    COMMA  shift, and go to state 172

    $default  reduce using rule 2 (N)

    N  go to state 258


State 251

  132 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 132 (labeled_statement)


State 252

  146 iteration_statement: DO M statement M . WHILE LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMI_COLON

    WHILE  shift, and go to state 259


State 253

  148 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_statement . expression_opt RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    $default  reduce using rule 154 (expression_opt)

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 260
    expression_opt             go to state 261


State 254

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M . expression_statement N M expression_opt N RIGHT_ROUND_BRACE M statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    expression_statement       go to state 262


State 255

  142 selection_statement: IF LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE M statement N
  143                    | IF LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE M statement N ELSE M statement

    RIGHT_ROUND_BRACE  shift, and go to state 263


State 256

  144 selection_statement: SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 264
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 257

   73 expression: expression . COMMA assignment_expression
  145 iteration_statement: WHILE M LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE M statement

    COMMA  shift, and go to state 172

    $default  reduce using rule 2 (N)

    N  go to state 265


State 258

   58 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N . COLON M conditional_expression

    COLON  shift, and go to state 266


State 259

  146 iteration_statement: DO M statement M WHILE . LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMI_COLON

    LEFT_ROUND_BRACE  shift, and go to state 267


State 260

   73 expression: expression . COMMA assignment_expression
  155 expression_opt: expression .

    COMMA  shift, and go to state 172

    $default  reduce using rule 155 (expression_opt)


State 261

  148 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_statement expression_opt . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 268


State 262

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement . N M expression_opt N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 2 (N)

    N  go to state 269


State 263

  142 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . M statement N
  143                    | IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 270


State 264

  144 selection_statement: SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 144 (selection_statement)


State 265

  145 iteration_statement: WHILE M LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE M statement

    RIGHT_ROUND_BRACE  shift, and go to state 271


State 266

   58 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 272


State 267

  146 iteration_statement: DO M statement M WHILE LEFT_ROUND_BRACE . expression N RIGHT_ROUND_BRACE SEMI_COLON

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 273


State 268

  148 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_statement expression_opt RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 274
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 269

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement N . M expression_opt N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 1 (M)

    M  go to state 275


State 270

  142 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M . statement N
  143                    | IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M . statement N ELSE M statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 276
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 271

  145 iteration_statement: WHILE M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 277


State 272

   58 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON M . conditional_expression

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 120
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 278


State 273

   73 expression: expression . COMMA assignment_expression
  146 iteration_statement: DO M statement M WHILE LEFT_ROUND_BRACE expression . N RIGHT_ROUND_BRACE SEMI_COLON

    COMMA  shift, and go to state 172

    $default  reduce using rule 2 (N)

    N  go to state 279


State 274

  148 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_statement expression_opt RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 148 (iteration_statement)


State 275

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement N M . expression_opt N RIGHT_ROUND_BRACE M statement

    IDENTIFIER        shift, and go to state 45
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    $default  reduce using rule 154 (expression_opt)

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 260
    expression_opt             go to state 280


State 276

  142 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement . N
  143                    | IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement . N ELSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 281


State 277

  145 iteration_statement: WHILE M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 282
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 278

   58 conditional_expression: logical_OR_expression N QUESTION_MARK M expression N COLON M conditional_expression .

    $default  reduce using rule 58 (conditional_expression)


State 279

  146 iteration_statement: DO M statement M WHILE LEFT_ROUND_BRACE expression N . RIGHT_ROUND_BRACE SEMI_COLON

    RIGHT_ROUND_BRACE  shift, and go to state 283


State 280

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement N M expression_opt . N RIGHT_ROUND_BRACE M statement

    $default  reduce using rule 2 (N)

    N  go to state 284


State 281

  142 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N .
  143                    | IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N . ELSE M statement

    ELSE  shift, and go to state 285

    $default  reduce using rule 142 (selection_statement)


State 282

  145 iteration_statement: WHILE M LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement .

    $default  reduce using rule 145 (iteration_statement)


State 283

  146 iteration_statement: DO M statement M WHILE LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE . SEMI_COLON

    SEMI_COLON  shift, and go to state 286


State 284

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement N M expression_opt N . RIGHT_ROUND_BRACE M statement

    RIGHT_ROUND_BRACE  shift, and go to state 287


State 285

  143 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 288


State 286

  146 iteration_statement: DO M statement M WHILE LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE SEMI_COLON .

    $default  reduce using rule 146 (iteration_statement)


State 287

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement N M expression_opt N RIGHT_ROUND_BRACE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 289


State 288

  143 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE M . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 290
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 289

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement N M expression_opt N RIGHT_ROUND_BRACE M . statement

    BREAK             shift, and go to state 141
    CASE              shift, and go to state 142
    CONTINUE          shift, and go to state 143
    DEFAULT           shift, and go to state 144
    DO                shift, and go to state 145
    FOR               shift, and go to state 146
    GOTO              shift, and go to state 147
    IF                shift, and go to state 148
    RETURN            shift, and go to state 149
    SWITCH            shift, and go to state 150
    WHILE             shift, and go to state 151
    IDENTIFIER        shift, and go to state 152
    INT_NO            shift, and go to state 46
    FLOAT_NO          shift, and go to state 47
    CHARACTER         shift, and go to state 48
    STRING            shift, and go to state 49
    LEFT_ROUND_BRACE  shift, and go to state 50
    LEFT_CURLY_BRACE  shift, and go to state 76
    INCREMENT         shift, and go to state 52
    DECREMENT         shift, and go to state 53
    AMPERSAND         shift, and go to state 54
    MULTIPLY          shift, and go to state 55
    ADD               shift, and go to state 56
    SUBTRACT          shift, and go to state 57

    primary_expression         go to state 58
    postfix_expression         go to state 59
    unary_expression           go to state 60
    unary_operator             go to state 61
    cast_expression            go to state 62
    multiplicative_expression  go to state 63
    additive_expression        go to state 64
    shift_expression           go to state 65
    relational_expression      go to state 66
    equality_expression        go to state 67
    AND_expression             go to state 68
    exclusive_or_expression    go to state 69
    inclusive_or_expression    go to state 70
    logical_AND_expression     go to state 71
    logical_OR_expression      go to state 72
    conditional_expression     go to state 73
    assignment_expression      go to state 89
    expression                 go to state 153
    statement                  go to state 291
    labeled_statement          go to state 156
    compound_statement         go to state 157
    expression_statement       go to state 161
    selection_statement        go to state 162
    iteration_statement        go to state 163
    jump_statement             go to state 164


State 290

  143 selection_statement: IF LEFT_ROUND_BRACE expression N RIGHT_ROUND_BRACE M statement N ELSE M statement .

    $default  reduce using rule 143 (selection_statement)


State 291

  147 iteration_statement: FOR LEFT_ROUND_BRACE expression_statement M expression_statement N M expression_opt N RIGHT_ROUND_BRACE M statement .

    $default  reduce using rule 147 (iteration_statement)
