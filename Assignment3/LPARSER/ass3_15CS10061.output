Terminals unused in grammar

   COMMENT
   TILDA
   NEGATION
   HASH
   UNKNOWN


Rules useless in parser due to conflicts

   26 unary_operator: SUBTRACT


State 14 conflicts: 11 shift/reduce
State 20 conflicts: 1 shift/reduce, 2 reduce/reduce
State 22 conflicts: 11 shift/reduce
State 34 conflicts: 1 shift/reduce, 2 reduce/reduce
State 39 conflicts: 1 shift/reduce
State 51 conflicts: 11 shift/reduce
State 53 conflicts: 2 shift/reduce
State 57 conflicts: 1 shift/reduce
State 58 conflicts: 2 shift/reduce
State 62 conflicts: 1 shift/reduce
State 141 conflicts: 11 shift/reduce
State 184 conflicts: 1 shift/reduce
State 185 conflicts: 1 shift/reduce
State 186 conflicts: 2 shift/reduce
State 187 conflicts: 2 shift/reduce
State 195 conflicts: 1 shift/reduce
State 231 conflicts: 11 shift/reduce
State 250 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INT_NO
    3                   | FLOAT_NO
    4                   | CHARACTER
    5                   | STRING
    6                   | LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE

    7 postfix_expression: primary_expression
    8                   | postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
    9                   | postfix_expression LEFT_ROUND_BRACE argument_expression_list_opt RIGHT_ROUND_BRACE
   10                   | postfix_expression PERIOD IDENTIFIER
   11                   | postfix_expression ARROW IDENTIFIER
   12                   | postfix_expression INCREMENT
   13                   | postfix_expression DECREMENT
   14                   | postfix_expression SPECIAL

   15 argument_expression_list_opt: argument_expression_list
   16                             | %empty

   17 argument_expression_list: assignment_expression
   18                         | argument_expression_list assignment_expression

   19 unary_expression: postfix_expression
   20                 | INCREMENT unary_expression
   21                 | SUBTRACT unary_expression
   22                 | unary_operator cast_expression

   23 unary_operator: AMPERSAND
   24               | MULTIPLY
   25               | ADD
   26               | SUBTRACT

   27 cast_expression: unary_expression

   28 multiplicative_expression: cast_expression
   29                          | multiplicative_expression MULTIPLY cast_expression
   30                          | multiplicative_expression DIVIDE cast_expression
   31                          | multiplicative_expression PERCENTILE cast_expression

   32 additive_expression: multiplicative_expression
   33                    | additive_expression ADD multiplicative_expression
   34                    | additive_expression SUBTRACT multiplicative_expression

   35 shift_expression: additive_expression
   36                 | shift_expression LEFT_SHIFT additive_expression
   37                 | shift_expression RIGHT_SHIFT additive_expression

   38 relational_expression: shift_expression
   39                      | relational_expression LESS_THAN shift_expression
   40                      | relational_expression GREATER_THAN shift_expression
   41                      | relational_expression GREATER_THAN_EQUALTO shift_expression
   42                      | relational_expression LESS_THAN_EQUALTO shift_expression

   43 equality_expression: relational_expression
   44                    | equality_expression DOUBLE_EQUAL relational_expression
   45                    | equality_expression NOT_EQUAL relational_expression

   46 AND_expression: equality_expression
   47               | AND_expression AMPERSAND equality_expression

   48 exclusive_or_expression: AND_expression
   49                        | exclusive_or_expression XOR AND_expression

   50 inclusive_or_expression: exclusive_or_expression
   51                        | inclusive_or_expression OR exclusive_or_expression

   52 logical_AND_expression: inclusive_or_expression
   53                       | logical_AND_expression BINARY_AND inclusive_or_expression

   54 logical_OR_expression: logical_AND_expression
   55                      | logical_OR_expression BINARY_OR logical_AND_expression

   56 conditional_expression: logical_OR_expression
   57                       | logical_OR_expression QUESTION_MARK expression COLON conditional_expression

   58 assignment_expression_opt: assignment_expression
   59                          | %empty

   60 assignment_expression: conditional_expression
   61                      | unary_expression assignment_operator assignment_expression

   62 assignment_operator: EQUAL
   63                    | STAR_EQUAL
   64                    | SLASH_EQUAL
   65                    | PERCENTILE_EQUAL
   66                    | PLUS_EQUAL
   67                    | MINUS_EQUAL
   68                    | LEFT_SHIFT_EQUAL
   69                    | RIGHT_SHIFT_EQUAL
   70                    | AND_EQUAL
   71                    | XOR_EQUAL
   72                    | OR_EQUAL

   73 expression_opt: expression
   74               | %empty

   75 expression: assignment_expression
   76           | expression assignment_expression

   77 constant_expression: conditional_expression

   78 declaration_specifiers_opt: declaration_specifiers
   79                           | %empty

   80 declaration: declaration_specifiers init_declarator_list_opt

   81 declaration_specifiers: type_specifier declaration_specifiers_opt

   82 init_declarator_list_opt: init_declarator_list
   83                         | %empty

   84 init_declarator_list: init_declarator
   85                     | init_declarator_list init_declarator

   86 init_declarator: declarator
   87                | declarator EQUAL initializer

   88 type_specifier: VOID
   89               | CHAR
   90               | SHORT
   91               | INT
   92               | LONG
   93               | FLOAT
   94               | DOUBLE
   95               | MATRIX
   96               | SIGNED
   97               | UNSIGNED
   98               | BOOL

   99 declarator: pointer_opt direct_declarator

  100 direct_declarator: IDENTIFIER
  101                  | LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE
  102                  | direct_declarator LEFT_SQUARE_BRACE assignment_expression_opt RIGHT_SQUARE_BRACE
  103                  | direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  104                  | direct_declarator LEFT_ROUND_BRACE identifier_list_opt RIGHT_ROUND_BRACE

  105 pointer_opt: pointer
  106            | %empty

  107 pointer: MULTIPLY pointer_opt

  108 parameter_type_list: parameter_list

  109 parameter_list: parameter_declaration
  110               | parameter_list parameter_declaration

  111 parameter_declaration: declaration_specifiers declarator
  112                      | declaration_specifiers

  113 identifier_list_opt: identifier_list
  114                    | %empty

  115 identifier_list: IDENTIFIER
  116                | identifier_list IDENTIFIER

  117 initializer: assignment_expression
  118            | RIGHT_ROUND_BRACE initializer_row_list RIGHT_CURLY_BRACE

  119 initializer_row_list: initializer_row
  120                     | initializer_row_list SEMI_COLON initializer_row

  121 initializer_row: designation_opt initializer
  122                | initializer_row COMMA designation_opt initializer

  123 designation_opt: designation
  124                | %empty

  125 designation: designation_list EQUAL

  126 designation_list: designator
  127                 | designation_list designator

  128 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE
  129           | PERIOD IDENTIFIER

  130 statement: labeled_statement
  131          | compound_statement
  132          | expression_statement
  133          | selection_statement
  134          | iteration_statement
  135          | jump_statement

  136 labeled_statement: IDENTIFIER COLON statement
  137                  | CASE constant_expression COLON statement
  138                  | DEFAULT COLON statement

  139 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE

  140 block_item_list_opt: block_item_list
  141                    | %empty

  142 block_item_list: block_item
  143                | block_item_list block_item

  144 block_item: declaration
  145           | statement

  146 expression_statement: expression_opt SEMI_COLON

  147 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  148                    | IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE statement
  149                    | SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

  150 iteration_statement: WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  151                    | DO statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON
  152                    | FOR LEFT_ROUND_BRACE SEMI_COLON expression_opt expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement
  153                    | FOR LEFT_ROUND_BRACE declaration expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

  154 jump_statement: GOTO IDENTIFIER
  155               | CONTINUE SEMI_COLON
  156               | BREAK SEMI_COLON
  157               | RETURN expression_opt SEMI_COLON

  158 translation_unit: external_declaration
  159                 | translation_unit external_declaration

  160 external_declaration: function_definition
  161                     | declaration

  162 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  163 declaration_list_opt: declaration_list
  164                     | %empty

  165 declaration_list: declaration
  166                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
error (256)
BREAK (258) 156
CASE (259) 137
CHAR (260) 89
CONTINUE (261) 155
DEFAULT (262) 138
DO (263) 151
DOUBLE (264) 94
SHORT (265) 90
LONG (266) 92
ELSE (267) 148
FLOAT (268) 93
FOR (269) 152 153
GOTO (270) 154
IF (271) 147 148
INT (272) 91
RETURN (273) 157
SIGNED (274) 96
SWITCH (275) 149
UNSIGNED (276) 97
VOID (277) 88
WHILE (278) 150 151
BOOL (279) 98
MATRIX (280) 95
COMMENT (281)
IDENTIFIER (282) 1 10 11 100 115 116 129 136 154
INT_NO (283) 2
FLOAT_NO (284) 3
CHARACTER (285) 4
STRING (286) 5
LEFT_SQUARE_BRACE (287) 8 102 128
RIGHT_SQUARE_BRACE (288) 8 102 128
LEFT_ROUND_BRACE (289) 6 9 101 103 104 147 148 149 150 151 152 153
RIGHT_ROUND_BRACE (290) 6 9 101 103 104 118 147 148 149 150 151 152
    153
LEFT_CURLY_BRACE (291) 139
RIGHT_CURLY_BRACE (292) 118 139
PERIOD (293) 10 129
ARROW (294) 11
INCREMENT (295) 12 20
DECREMENT (296) 13
AMPERSAND (297) 23 47
MULTIPLY (298) 24 29 107
ADD (299) 25 33
SUBTRACT (300) 21 26 34
TILDA (301)
NEGATION (302)
DIVIDE (303) 30
PERCENTILE (304) 31
LEFT_SHIFT (305) 36
RIGHT_SHIFT (306) 37
LESS_THAN (307) 39
GREATER_THAN (308) 40
LESS_THAN_EQUALTO (309) 42
GREATER_THAN_EQUALTO (310) 41
DOUBLE_EQUAL (311) 44
NOT_EQUAL (312) 45
XOR (313) 49
OR (314) 51
BINARY_AND (315) 53
BINARY_OR (316) 55
QUESTION_MARK (317) 57
COLON (318) 57 136 137 138
SEMI_COLON (319) 120 146 151 152 153 155 156 157
EQUAL (320) 62 87 125
STAR_EQUAL (321) 63
SLASH_EQUAL (322) 64
PERCENTILE_EQUAL (323) 65
PLUS_EQUAL (324) 66
MINUS_EQUAL (325) 67
LEFT_SHIFT_EQUAL (326) 68
RIGHT_SHIFT_EQUAL (327) 69
AND_EQUAL (328) 70
XOR_EQUAL (329) 71
OR_EQUAL (330) 72
COMMA (331) 122
HASH (332)
SPECIAL (333) 14
UNKNOWN (334)


Nonterminals, with rules where they appear

$accept (80)
    on left: 0
primary_expression (81)
    on left: 1 2 3 4 5 6, on right: 7
postfix_expression (82)
    on left: 7 8 9 10 11 12 13 14, on right: 8 9 10 11 12 13 14 19
argument_expression_list_opt (83)
    on left: 15 16, on right: 9
argument_expression_list (84)
    on left: 17 18, on right: 15 18
unary_expression (85)
    on left: 19 20 21 22, on right: 20 21 27 61
unary_operator (86)
    on left: 23 24 25 26, on right: 22
cast_expression (87)
    on left: 27, on right: 22 28 29 30 31
multiplicative_expression (88)
    on left: 28 29 30 31, on right: 29 30 31 32 33 34
additive_expression (89)
    on left: 32 33 34, on right: 33 34 35 36 37
shift_expression (90)
    on left: 35 36 37, on right: 36 37 38 39 40 41 42
relational_expression (91)
    on left: 38 39 40 41 42, on right: 39 40 41 42 43 44 45
equality_expression (92)
    on left: 43 44 45, on right: 44 45 46 47
AND_expression (93)
    on left: 46 47, on right: 47 48 49
exclusive_or_expression (94)
    on left: 48 49, on right: 49 50 51
inclusive_or_expression (95)
    on left: 50 51, on right: 51 52 53
logical_AND_expression (96)
    on left: 52 53, on right: 53 54 55
logical_OR_expression (97)
    on left: 54 55, on right: 55 56 57
conditional_expression (98)
    on left: 56 57, on right: 57 60 77
assignment_expression_opt (99)
    on left: 58 59, on right: 102
assignment_expression (100)
    on left: 60 61, on right: 17 18 58 61 75 76 117
assignment_operator (101)
    on left: 62 63 64 65 66 67 68 69 70 71 72, on right: 61
expression_opt (102)
    on left: 73 74, on right: 146 152 153 157
expression (103)
    on left: 75 76, on right: 6 8 57 73 76 147 148 149 150 151
constant_expression (104)
    on left: 77, on right: 128 137
declaration_specifiers_opt (105)
    on left: 78 79, on right: 81
declaration (106)
    on left: 80, on right: 144 153 161 165 166
declaration_specifiers (107)
    on left: 81, on right: 78 80 111 112 162
init_declarator_list_opt (108)
    on left: 82 83, on right: 80
init_declarator_list (109)
    on left: 84 85, on right: 82 85
init_declarator (110)
    on left: 86 87, on right: 84 85
type_specifier (111)
    on left: 88 89 90 91 92 93 94 95 96 97 98, on right: 81
declarator (112)
    on left: 99, on right: 86 87 101 111 162
direct_declarator (113)
    on left: 100 101 102 103 104, on right: 99 102 103 104
pointer_opt (114)
    on left: 105 106, on right: 99 107
pointer (115)
    on left: 107, on right: 105
parameter_type_list (116)
    on left: 108, on right: 103
parameter_list (117)
    on left: 109 110, on right: 108 110
parameter_declaration (118)
    on left: 111 112, on right: 109 110
identifier_list_opt (119)
    on left: 113 114, on right: 104
identifier_list (120)
    on left: 115 116, on right: 113 116
initializer (121)
    on left: 117 118, on right: 87 121 122
initializer_row_list (122)
    on left: 119 120, on right: 118 120
initializer_row (123)
    on left: 121 122, on right: 119 120 122
designation_opt (124)
    on left: 123 124, on right: 121 122
designation (125)
    on left: 125, on right: 123
designation_list (126)
    on left: 126 127, on right: 125 127
designator (127)
    on left: 128 129, on right: 126 127
statement (128)
    on left: 130 131 132 133 134 135, on right: 136 137 138 145 147
    148 149 150 151 152 153
labeled_statement (129)
    on left: 136 137 138, on right: 130
compound_statement (130)
    on left: 139, on right: 131 162
block_item_list_opt (131)
    on left: 140 141, on right: 139
block_item_list (132)
    on left: 142 143, on right: 140 143
block_item (133)
    on left: 144 145, on right: 142 143
expression_statement (134)
    on left: 146, on right: 132
selection_statement (135)
    on left: 147 148 149, on right: 133
iteration_statement (136)
    on left: 150 151 152 153, on right: 134
jump_statement (137)
    on left: 154 155 156 157, on right: 135
translation_unit (138)
    on left: 158 159, on right: 0 159
external_declaration (139)
    on left: 160 161, on right: 158 159
function_definition (140)
    on left: 162, on right: 160
declaration_list_opt (141)
    on left: 163 164, on right: 162
declaration_list (142)
    on left: 165 166, on right: 163 166


State 0

    0 $accept: . translation_unit $end

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    declaration             go to state 12
    declaration_specifiers  go to state 13
    type_specifier          go to state 14
    translation_unit        go to state 15
    external_declaration    go to state 16
    function_definition     go to state 17


State 1

   89 type_specifier: CHAR .

    $default  reduce using rule 89 (type_specifier)


State 2

   94 type_specifier: DOUBLE .

    $default  reduce using rule 94 (type_specifier)


State 3

   90 type_specifier: SHORT .

    $default  reduce using rule 90 (type_specifier)


State 4

   92 type_specifier: LONG .

    $default  reduce using rule 92 (type_specifier)


State 5

   93 type_specifier: FLOAT .

    $default  reduce using rule 93 (type_specifier)


State 6

   91 type_specifier: INT .

    $default  reduce using rule 91 (type_specifier)


State 7

   96 type_specifier: SIGNED .

    $default  reduce using rule 96 (type_specifier)


State 8

   97 type_specifier: UNSIGNED .

    $default  reduce using rule 97 (type_specifier)


State 9

   88 type_specifier: VOID .

    $default  reduce using rule 88 (type_specifier)


State 10

   98 type_specifier: BOOL .

    $default  reduce using rule 98 (type_specifier)


State 11

   95 type_specifier: MATRIX .

    $default  reduce using rule 95 (type_specifier)


State 12

  161 external_declaration: declaration .

    $default  reduce using rule 161 (external_declaration)


State 13

   80 declaration: declaration_specifiers . init_declarator_list_opt
  162 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    MULTIPLY  shift, and go to state 18

    IDENTIFIER        reduce using rule 106 (pointer_opt)
    LEFT_ROUND_BRACE  reduce using rule 106 (pointer_opt)
    $default          reduce using rule 83 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 19
    init_declarator_list      go to state 20
    init_declarator           go to state 21
    declarator                go to state 22
    pointer_opt               go to state 23
    pointer                   go to state 24


State 14

   81 declaration_specifiers: type_specifier . declaration_specifiers_opt

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    CHAR      [reduce using rule 79 (declaration_specifiers_opt)]
    DOUBLE    [reduce using rule 79 (declaration_specifiers_opt)]
    SHORT     [reduce using rule 79 (declaration_specifiers_opt)]
    LONG      [reduce using rule 79 (declaration_specifiers_opt)]
    FLOAT     [reduce using rule 79 (declaration_specifiers_opt)]
    INT       [reduce using rule 79 (declaration_specifiers_opt)]
    SIGNED    [reduce using rule 79 (declaration_specifiers_opt)]
    UNSIGNED  [reduce using rule 79 (declaration_specifiers_opt)]
    VOID      [reduce using rule 79 (declaration_specifiers_opt)]
    BOOL      [reduce using rule 79 (declaration_specifiers_opt)]
    MATRIX    [reduce using rule 79 (declaration_specifiers_opt)]
    $default  reduce using rule 79 (declaration_specifiers_opt)

    declaration_specifiers_opt  go to state 25
    declaration_specifiers      go to state 26
    type_specifier              go to state 14


State 15

    0 $accept: translation_unit . $end
  159 translation_unit: translation_unit . external_declaration

    $end      shift, and go to state 27
    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    declaration             go to state 12
    declaration_specifiers  go to state 13
    type_specifier          go to state 14
    external_declaration    go to state 28
    function_definition     go to state 17


State 16

  158 translation_unit: external_declaration .

    $default  reduce using rule 158 (translation_unit)


State 17

  160 external_declaration: function_definition .

    $default  reduce using rule 160 (external_declaration)


State 18

  107 pointer: MULTIPLY . pointer_opt

    MULTIPLY  shift, and go to state 18

    $default  reduce using rule 106 (pointer_opt)

    pointer_opt  go to state 29
    pointer      go to state 24


State 19

   80 declaration: declaration_specifiers init_declarator_list_opt .

    $default  reduce using rule 80 (declaration)


State 20

   82 init_declarator_list_opt: init_declarator_list .
   85 init_declarator_list: init_declarator_list . init_declarator

    MULTIPLY  shift, and go to state 18

    IDENTIFIER        reduce using rule 82 (init_declarator_list_opt)
    IDENTIFIER        [reduce using rule 106 (pointer_opt)]
    LEFT_ROUND_BRACE  reduce using rule 82 (init_declarator_list_opt)
    LEFT_ROUND_BRACE  [reduce using rule 106 (pointer_opt)]
    MULTIPLY          [reduce using rule 82 (init_declarator_list_opt)]
    $default          reduce using rule 82 (init_declarator_list_opt)

    init_declarator  go to state 30
    declarator       go to state 31
    pointer_opt      go to state 23
    pointer          go to state 24


State 21

   84 init_declarator_list: init_declarator .

    $default  reduce using rule 84 (init_declarator_list)


State 22

   86 init_declarator: declarator .
   87                | declarator . EQUAL initializer
  162 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11
    EQUAL     shift, and go to state 32

    CHAR              [reduce using rule 86 (init_declarator)]
    DOUBLE            [reduce using rule 86 (init_declarator)]
    SHORT             [reduce using rule 86 (init_declarator)]
    LONG              [reduce using rule 86 (init_declarator)]
    FLOAT             [reduce using rule 86 (init_declarator)]
    INT               [reduce using rule 86 (init_declarator)]
    SIGNED            [reduce using rule 86 (init_declarator)]
    UNSIGNED          [reduce using rule 86 (init_declarator)]
    VOID              [reduce using rule 86 (init_declarator)]
    BOOL              [reduce using rule 86 (init_declarator)]
    MATRIX            [reduce using rule 86 (init_declarator)]
    LEFT_CURLY_BRACE  reduce using rule 164 (declaration_list_opt)
    $default          reduce using rule 86 (init_declarator)

    declaration             go to state 33
    declaration_specifiers  go to state 34
    type_specifier          go to state 14
    declaration_list_opt    go to state 35
    declaration_list        go to state 36


State 23

   99 declarator: pointer_opt . direct_declarator

    IDENTIFIER        shift, and go to state 37
    LEFT_ROUND_BRACE  shift, and go to state 38

    direct_declarator  go to state 39


State 24

  105 pointer_opt: pointer .

    $default  reduce using rule 105 (pointer_opt)


State 25

   81 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 81 (declaration_specifiers)


State 26

   78 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 78 (declaration_specifiers_opt)


State 27

    0 $accept: translation_unit $end .

    $default  accept


State 28

  159 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 159 (translation_unit)


State 29

  107 pointer: MULTIPLY pointer_opt .

    $default  reduce using rule 107 (pointer)


State 30

   85 init_declarator_list: init_declarator_list init_declarator .

    $default  reduce using rule 85 (init_declarator_list)


State 31

   86 init_declarator: declarator .
   87                | declarator . EQUAL initializer

    EQUAL  shift, and go to state 32

    $default  reduce using rule 86 (init_declarator)


State 32

   87 init_declarator: declarator EQUAL . initializer

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 46
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 68
    initializer                go to state 69


State 33

  165 declaration_list: declaration .

    $default  reduce using rule 165 (declaration_list)


State 34

   80 declaration: declaration_specifiers . init_declarator_list_opt

    MULTIPLY  shift, and go to state 18

    IDENTIFIER        reduce using rule 83 (init_declarator_list_opt)
    IDENTIFIER        [reduce using rule 106 (pointer_opt)]
    LEFT_ROUND_BRACE  reduce using rule 83 (init_declarator_list_opt)
    LEFT_ROUND_BRACE  [reduce using rule 106 (pointer_opt)]
    MULTIPLY          [reduce using rule 83 (init_declarator_list_opt)]
    $default          reduce using rule 83 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 19
    init_declarator_list      go to state 20
    init_declarator           go to state 21
    declarator                go to state 31
    pointer_opt               go to state 23
    pointer                   go to state 24


State 35

  162 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    LEFT_CURLY_BRACE  shift, and go to state 70

    compound_statement  go to state 71


State 36

  163 declaration_list_opt: declaration_list .
  166 declaration_list: declaration_list . declaration

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    $default  reduce using rule 163 (declaration_list_opt)

    declaration             go to state 72
    declaration_specifiers  go to state 34
    type_specifier          go to state 14


State 37

  100 direct_declarator: IDENTIFIER .

    $default  reduce using rule 100 (direct_declarator)


State 38

  101 direct_declarator: LEFT_ROUND_BRACE . declarator RIGHT_ROUND_BRACE

    MULTIPLY  shift, and go to state 18

    $default  reduce using rule 106 (pointer_opt)

    declarator   go to state 73
    pointer_opt  go to state 23
    pointer      go to state 24


State 39

   99 declarator: pointer_opt direct_declarator .
  102 direct_declarator: direct_declarator . LEFT_SQUARE_BRACE assignment_expression_opt RIGHT_SQUARE_BRACE
  103                  | direct_declarator . LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE
  104                  | direct_declarator . LEFT_ROUND_BRACE identifier_list_opt RIGHT_ROUND_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 74
    LEFT_ROUND_BRACE   shift, and go to state 75

    LEFT_ROUND_BRACE  [reduce using rule 99 (declarator)]
    $default          reduce using rule 99 (declarator)


State 40

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 41

    2 primary_expression: INT_NO .

    $default  reduce using rule 2 (primary_expression)


State 42

    3 primary_expression: FLOAT_NO .

    $default  reduce using rule 3 (primary_expression)


State 43

    4 primary_expression: CHARACTER .

    $default  reduce using rule 4 (primary_expression)


State 44

    5 primary_expression: STRING .

    $default  reduce using rule 5 (primary_expression)


State 45

    6 primary_expression: LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression                 go to state 77


State 46

  118 initializer: RIGHT_ROUND_BRACE . initializer_row_list RIGHT_CURLY_BRACE

    LEFT_SQUARE_BRACE  shift, and go to state 78
    PERIOD             shift, and go to state 79

    $default  reduce using rule 124 (designation_opt)

    initializer_row_list  go to state 80
    initializer_row       go to state 81
    designation_opt       go to state 82
    designation           go to state 83
    designation_list      go to state 84
    designator            go to state 85


State 47

   20 unary_expression: INCREMENT . unary_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 86
    unary_operator      go to state 55


State 48

   23 unary_operator: AMPERSAND .

    $default  reduce using rule 23 (unary_operator)


State 49

   24 unary_operator: MULTIPLY .

    $default  reduce using rule 24 (unary_operator)


State 50

   25 unary_operator: ADD .

    $default  reduce using rule 25 (unary_operator)


State 51

   21 unary_expression: SUBTRACT . unary_expression
   26 unary_operator: SUBTRACT .

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    IDENTIFIER        [reduce using rule 26 (unary_operator)]
    INT_NO            [reduce using rule 26 (unary_operator)]
    FLOAT_NO          [reduce using rule 26 (unary_operator)]
    CHARACTER         [reduce using rule 26 (unary_operator)]
    STRING            [reduce using rule 26 (unary_operator)]
    LEFT_ROUND_BRACE  [reduce using rule 26 (unary_operator)]
    INCREMENT         [reduce using rule 26 (unary_operator)]
    AMPERSAND         [reduce using rule 26 (unary_operator)]
    MULTIPLY          [reduce using rule 26 (unary_operator)]
    ADD               [reduce using rule 26 (unary_operator)]
    SUBTRACT          [reduce using rule 26 (unary_operator)]

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 87
    unary_operator      go to state 55


State 52

    7 postfix_expression: primary_expression .

    $default  reduce using rule 7 (postfix_expression)


State 53

    8 postfix_expression: postfix_expression . LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE
    9                   | postfix_expression . LEFT_ROUND_BRACE argument_expression_list_opt RIGHT_ROUND_BRACE
   10                   | postfix_expression . PERIOD IDENTIFIER
   11                   | postfix_expression . ARROW IDENTIFIER
   12                   | postfix_expression . INCREMENT
   13                   | postfix_expression . DECREMENT
   14                   | postfix_expression . SPECIAL
   19 unary_expression: postfix_expression .

    LEFT_SQUARE_BRACE  shift, and go to state 88
    LEFT_ROUND_BRACE   shift, and go to state 89
    PERIOD             shift, and go to state 90
    ARROW              shift, and go to state 91
    INCREMENT          shift, and go to state 92
    DECREMENT          shift, and go to state 93
    SPECIAL            shift, and go to state 94

    LEFT_ROUND_BRACE  [reduce using rule 19 (unary_expression)]
    INCREMENT         [reduce using rule 19 (unary_expression)]
    $default          reduce using rule 19 (unary_expression)


State 54

   27 cast_expression: unary_expression .
   61 assignment_expression: unary_expression . assignment_operator assignment_expression

    EQUAL              shift, and go to state 95
    STAR_EQUAL         shift, and go to state 96
    SLASH_EQUAL        shift, and go to state 97
    PERCENTILE_EQUAL   shift, and go to state 98
    PLUS_EQUAL         shift, and go to state 99
    MINUS_EQUAL        shift, and go to state 100
    LEFT_SHIFT_EQUAL   shift, and go to state 101
    RIGHT_SHIFT_EQUAL  shift, and go to state 102
    AND_EQUAL          shift, and go to state 103
    XOR_EQUAL          shift, and go to state 104
    OR_EQUAL           shift, and go to state 105

    $default  reduce using rule 27 (cast_expression)

    assignment_operator  go to state 106


State 55

   22 unary_expression: unary_operator . cast_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 107
    unary_operator      go to state 55
    cast_expression     go to state 108


State 56

   28 multiplicative_expression: cast_expression .

    $default  reduce using rule 28 (multiplicative_expression)


State 57

   29 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   30                          | multiplicative_expression . DIVIDE cast_expression
   31                          | multiplicative_expression . PERCENTILE cast_expression
   32 additive_expression: multiplicative_expression .

    MULTIPLY    shift, and go to state 109
    DIVIDE      shift, and go to state 110
    PERCENTILE  shift, and go to state 111

    MULTIPLY  [reduce using rule 32 (additive_expression)]
    $default  reduce using rule 32 (additive_expression)


State 58

   33 additive_expression: additive_expression . ADD multiplicative_expression
   34                    | additive_expression . SUBTRACT multiplicative_expression
   35 shift_expression: additive_expression .

    ADD       shift, and go to state 112
    SUBTRACT  shift, and go to state 113

    ADD       [reduce using rule 35 (shift_expression)]
    SUBTRACT  [reduce using rule 35 (shift_expression)]
    $default  reduce using rule 35 (shift_expression)


State 59

   36 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   37                 | shift_expression . RIGHT_SHIFT additive_expression
   38 relational_expression: shift_expression .

    LEFT_SHIFT   shift, and go to state 114
    RIGHT_SHIFT  shift, and go to state 115

    $default  reduce using rule 38 (relational_expression)


State 60

   39 relational_expression: relational_expression . LESS_THAN shift_expression
   40                      | relational_expression . GREATER_THAN shift_expression
   41                      | relational_expression . GREATER_THAN_EQUALTO shift_expression
   42                      | relational_expression . LESS_THAN_EQUALTO shift_expression
   43 equality_expression: relational_expression .

    LESS_THAN             shift, and go to state 116
    GREATER_THAN          shift, and go to state 117
    LESS_THAN_EQUALTO     shift, and go to state 118
    GREATER_THAN_EQUALTO  shift, and go to state 119

    $default  reduce using rule 43 (equality_expression)


State 61

   44 equality_expression: equality_expression . DOUBLE_EQUAL relational_expression
   45                    | equality_expression . NOT_EQUAL relational_expression
   46 AND_expression: equality_expression .

    DOUBLE_EQUAL  shift, and go to state 120
    NOT_EQUAL     shift, and go to state 121

    $default  reduce using rule 46 (AND_expression)


State 62

   47 AND_expression: AND_expression . AMPERSAND equality_expression
   48 exclusive_or_expression: AND_expression .

    AMPERSAND  shift, and go to state 122

    AMPERSAND  [reduce using rule 48 (exclusive_or_expression)]
    $default   reduce using rule 48 (exclusive_or_expression)


State 63

   49 exclusive_or_expression: exclusive_or_expression . XOR AND_expression
   50 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 123

    $default  reduce using rule 50 (inclusive_or_expression)


State 64

   51 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
   52 logical_AND_expression: inclusive_or_expression .

    OR  shift, and go to state 124

    $default  reduce using rule 52 (logical_AND_expression)


State 65

   53 logical_AND_expression: logical_AND_expression . BINARY_AND inclusive_or_expression
   54 logical_OR_expression: logical_AND_expression .

    BINARY_AND  shift, and go to state 125

    $default  reduce using rule 54 (logical_OR_expression)


State 66

   55 logical_OR_expression: logical_OR_expression . BINARY_OR logical_AND_expression
   56 conditional_expression: logical_OR_expression .
   57                       | logical_OR_expression . QUESTION_MARK expression COLON conditional_expression

    BINARY_OR      shift, and go to state 126
    QUESTION_MARK  shift, and go to state 127

    $default  reduce using rule 56 (conditional_expression)


State 67

   60 assignment_expression: conditional_expression .

    $default  reduce using rule 60 (assignment_expression)


State 68

  117 initializer: assignment_expression .

    $default  reduce using rule 117 (initializer)


State 69

   87 init_declarator: declarator EQUAL initializer .

    $default  reduce using rule 87 (init_declarator)


State 70

  139 compound_statement: LEFT_CURLY_BRACE . block_item_list_opt RIGHT_CURLY_BRACE

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    DOUBLE            shift, and go to state 2
    SHORT             shift, and go to state 3
    LONG              shift, and go to state 4
    FLOAT             shift, and go to state 5
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    INT               shift, and go to state 6
    RETURN            shift, and go to state 136
    SIGNED            shift, and go to state 7
    SWITCH            shift, and go to state 137
    UNSIGNED          shift, and go to state 8
    VOID              shift, and go to state 9
    WHILE             shift, and go to state 138
    BOOL              shift, and go to state 10
    MATRIX            shift, and go to state 11
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    RIGHT_CURLY_BRACE  reduce using rule 141 (block_item_list_opt)
    $default           reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    declaration                go to state 142
    declaration_specifiers     go to state 34
    type_specifier             go to state 14
    statement                  go to state 143
    labeled_statement          go to state 144
    compound_statement         go to state 145
    block_item_list_opt        go to state 146
    block_item_list            go to state 147
    block_item                 go to state 148
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 71

  162 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 162 (function_definition)


State 72

  166 declaration_list: declaration_list declaration .

    $default  reduce using rule 166 (declaration_list)


State 73

  101 direct_declarator: LEFT_ROUND_BRACE declarator . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 153


State 74

  102 direct_declarator: direct_declarator LEFT_SQUARE_BRACE . assignment_expression_opt RIGHT_SQUARE_BRACE

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 59 (assignment_expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression_opt  go to state 154
    assignment_expression      go to state 155


State 75

  103 direct_declarator: direct_declarator LEFT_ROUND_BRACE . parameter_type_list RIGHT_ROUND_BRACE
  104                  | direct_declarator LEFT_ROUND_BRACE . identifier_list_opt RIGHT_ROUND_BRACE

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    SHORT       shift, and go to state 3
    LONG        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT         shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    VOID        shift, and go to state 9
    BOOL        shift, and go to state 10
    MATRIX      shift, and go to state 11
    IDENTIFIER  shift, and go to state 156

    $default  reduce using rule 114 (identifier_list_opt)

    declaration_specifiers  go to state 157
    type_specifier          go to state 14
    parameter_type_list     go to state 158
    parameter_list          go to state 159
    parameter_declaration   go to state 160
    identifier_list_opt     go to state 161
    identifier_list         go to state 162


State 76

   75 expression: assignment_expression .

    $default  reduce using rule 75 (expression)


State 77

    6 primary_expression: LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE
   76 expression: expression . assignment_expression

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 163
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 78

  128 designator: LEFT_SQUARE_BRACE . constant_expression RIGHT_SQUARE_BRACE

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 165
    constant_expression        go to state 166


State 79

  129 designator: PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 167


State 80

  118 initializer: RIGHT_ROUND_BRACE initializer_row_list . RIGHT_CURLY_BRACE
  120 initializer_row_list: initializer_row_list . SEMI_COLON initializer_row

    RIGHT_CURLY_BRACE  shift, and go to state 168
    SEMI_COLON         shift, and go to state 169


State 81

  119 initializer_row_list: initializer_row .
  122 initializer_row: initializer_row . COMMA designation_opt initializer

    COMMA  shift, and go to state 170

    $default  reduce using rule 119 (initializer_row_list)


State 82

  121 initializer_row: designation_opt . initializer

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 46
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 68
    initializer                go to state 171


State 83

  123 designation_opt: designation .

    $default  reduce using rule 123 (designation_opt)


State 84

  125 designation: designation_list . EQUAL
  127 designation_list: designation_list . designator

    LEFT_SQUARE_BRACE  shift, and go to state 78
    PERIOD             shift, and go to state 79
    EQUAL              shift, and go to state 172

    designator  go to state 173


State 85

  126 designation_list: designator .

    $default  reduce using rule 126 (designation_list)


State 86

   20 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 20 (unary_expression)


State 87

   21 unary_expression: SUBTRACT unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 88

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACE . expression RIGHT_SQUARE_BRACE

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression                 go to state 174


State 89

    9 postfix_expression: postfix_expression LEFT_ROUND_BRACE . argument_expression_list_opt RIGHT_ROUND_BRACE

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 16 (argument_expression_list_opt)

    primary_expression            go to state 52
    postfix_expression            go to state 53
    argument_expression_list_opt  go to state 175
    argument_expression_list      go to state 176
    unary_expression              go to state 54
    unary_operator                go to state 55
    cast_expression               go to state 56
    multiplicative_expression     go to state 57
    additive_expression           go to state 58
    shift_expression              go to state 59
    relational_expression         go to state 60
    equality_expression           go to state 61
    AND_expression                go to state 62
    exclusive_or_expression       go to state 63
    inclusive_or_expression       go to state 64
    logical_AND_expression        go to state 65
    logical_OR_expression         go to state 66
    conditional_expression        go to state 67
    assignment_expression         go to state 177


State 90

   10 postfix_expression: postfix_expression PERIOD . IDENTIFIER

    IDENTIFIER  shift, and go to state 178


State 91

   11 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 179


State 92

   12 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 12 (postfix_expression)


State 93

   13 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 13 (postfix_expression)


State 94

   14 postfix_expression: postfix_expression SPECIAL .

    $default  reduce using rule 14 (postfix_expression)


State 95

   62 assignment_operator: EQUAL .

    $default  reduce using rule 62 (assignment_operator)


State 96

   63 assignment_operator: STAR_EQUAL .

    $default  reduce using rule 63 (assignment_operator)


State 97

   64 assignment_operator: SLASH_EQUAL .

    $default  reduce using rule 64 (assignment_operator)


State 98

   65 assignment_operator: PERCENTILE_EQUAL .

    $default  reduce using rule 65 (assignment_operator)


State 99

   66 assignment_operator: PLUS_EQUAL .

    $default  reduce using rule 66 (assignment_operator)


State 100

   67 assignment_operator: MINUS_EQUAL .

    $default  reduce using rule 67 (assignment_operator)


State 101

   68 assignment_operator: LEFT_SHIFT_EQUAL .

    $default  reduce using rule 68 (assignment_operator)


State 102

   69 assignment_operator: RIGHT_SHIFT_EQUAL .

    $default  reduce using rule 69 (assignment_operator)


State 103

   70 assignment_operator: AND_EQUAL .

    $default  reduce using rule 70 (assignment_operator)


State 104

   71 assignment_operator: XOR_EQUAL .

    $default  reduce using rule 71 (assignment_operator)


State 105

   72 assignment_operator: OR_EQUAL .

    $default  reduce using rule 72 (assignment_operator)


State 106

   61 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 180


State 107

   27 cast_expression: unary_expression .

    $default  reduce using rule 27 (cast_expression)


State 108

   22 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 22 (unary_expression)


State 109

   29 multiplicative_expression: multiplicative_expression MULTIPLY . cast_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 107
    unary_operator      go to state 55
    cast_expression     go to state 181


State 110

   30 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 107
    unary_operator      go to state 55
    cast_expression     go to state 182


State 111

   31 multiplicative_expression: multiplicative_expression PERCENTILE . cast_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression  go to state 52
    postfix_expression  go to state 53
    unary_expression    go to state 107
    unary_operator      go to state 55
    cast_expression     go to state 183


State 112

   33 additive_expression: additive_expression ADD . multiplicative_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 184


State 113

   34 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 185


State 114

   36 shift_expression: shift_expression LEFT_SHIFT . additive_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 186


State 115

   37 shift_expression: shift_expression RIGHT_SHIFT . additive_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 187


State 116

   39 relational_expression: relational_expression LESS_THAN . shift_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 188


State 117

   40 relational_expression: relational_expression GREATER_THAN . shift_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 189


State 118

   42 relational_expression: relational_expression LESS_THAN_EQUALTO . shift_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 190


State 119

   41 relational_expression: relational_expression GREATER_THAN_EQUALTO . shift_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 191


State 120

   44 equality_expression: equality_expression DOUBLE_EQUAL . relational_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 192


State 121

   45 equality_expression: equality_expression NOT_EQUAL . relational_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 193


State 122

   47 AND_expression: AND_expression AMPERSAND . equality_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 194


State 123

   49 exclusive_or_expression: exclusive_or_expression XOR . AND_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 195


State 124

   51 inclusive_or_expression: inclusive_or_expression OR . exclusive_or_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 196


State 125

   53 logical_AND_expression: logical_AND_expression BINARY_AND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 197


State 126

   55 logical_OR_expression: logical_OR_expression BINARY_OR . logical_AND_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 198


State 127

   57 conditional_expression: logical_OR_expression QUESTION_MARK . expression COLON conditional_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression                 go to state 199


State 128

  156 jump_statement: BREAK . SEMI_COLON

    SEMI_COLON  shift, and go to state 200


State 129

  137 labeled_statement: CASE . constant_expression COLON statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 165
    constant_expression        go to state 201


State 130

  155 jump_statement: CONTINUE . SEMI_COLON

    SEMI_COLON  shift, and go to state 202


State 131

  138 labeled_statement: DEFAULT . COLON statement

    COLON  shift, and go to state 203


State 132

  151 iteration_statement: DO . statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 204
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 133

  152 iteration_statement: FOR . LEFT_ROUND_BRACE SEMI_COLON expression_opt expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement
  153                    | FOR . LEFT_ROUND_BRACE declaration expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 205


State 134

  154 jump_statement: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 206


State 135

  147 selection_statement: IF . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement
  148                    | IF . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE statement

    LEFT_ROUND_BRACE  shift, and go to state 207


State 136

  157 jump_statement: RETURN . expression_opt SEMI_COLON

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 208
    expression                 go to state 141


State 137

  149 selection_statement: SWITCH . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 209


State 138

  150 iteration_statement: WHILE . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement

    LEFT_ROUND_BRACE  shift, and go to state 210


State 139

    1 primary_expression: IDENTIFIER .
  136 labeled_statement: IDENTIFIER . COLON statement

    COLON  shift, and go to state 211

    $default  reduce using rule 1 (primary_expression)


State 140

  146 expression_statement: expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 212


State 141

   73 expression_opt: expression .
   76 expression: expression . assignment_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    IDENTIFIER        [reduce using rule 73 (expression_opt)]
    INT_NO            [reduce using rule 73 (expression_opt)]
    FLOAT_NO          [reduce using rule 73 (expression_opt)]
    CHARACTER         [reduce using rule 73 (expression_opt)]
    STRING            [reduce using rule 73 (expression_opt)]
    LEFT_ROUND_BRACE  [reduce using rule 73 (expression_opt)]
    INCREMENT         [reduce using rule 73 (expression_opt)]
    AMPERSAND         [reduce using rule 73 (expression_opt)]
    MULTIPLY          [reduce using rule 73 (expression_opt)]
    ADD               [reduce using rule 73 (expression_opt)]
    SUBTRACT          [reduce using rule 73 (expression_opt)]
    $default          reduce using rule 73 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 142

  144 block_item: declaration .

    $default  reduce using rule 144 (block_item)


State 143

  145 block_item: statement .

    $default  reduce using rule 145 (block_item)


State 144

  130 statement: labeled_statement .

    $default  reduce using rule 130 (statement)


State 145

  131 statement: compound_statement .

    $default  reduce using rule 131 (statement)


State 146

  139 compound_statement: LEFT_CURLY_BRACE block_item_list_opt . RIGHT_CURLY_BRACE

    RIGHT_CURLY_BRACE  shift, and go to state 213


State 147

  140 block_item_list_opt: block_item_list .
  143 block_item_list: block_item_list . block_item

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CHAR              shift, and go to state 1
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    DOUBLE            shift, and go to state 2
    SHORT             shift, and go to state 3
    LONG              shift, and go to state 4
    FLOAT             shift, and go to state 5
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    INT               shift, and go to state 6
    RETURN            shift, and go to state 136
    SIGNED            shift, and go to state 7
    SWITCH            shift, and go to state 137
    UNSIGNED          shift, and go to state 8
    VOID              shift, and go to state 9
    WHILE             shift, and go to state 138
    BOOL              shift, and go to state 10
    MATRIX            shift, and go to state 11
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    RIGHT_CURLY_BRACE  reduce using rule 140 (block_item_list_opt)
    $default           reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    declaration                go to state 142
    declaration_specifiers     go to state 34
    type_specifier             go to state 14
    statement                  go to state 143
    labeled_statement          go to state 144
    compound_statement         go to state 145
    block_item                 go to state 214
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 148

  142 block_item_list: block_item .

    $default  reduce using rule 142 (block_item_list)


State 149

  132 statement: expression_statement .

    $default  reduce using rule 132 (statement)


State 150

  133 statement: selection_statement .

    $default  reduce using rule 133 (statement)


State 151

  134 statement: iteration_statement .

    $default  reduce using rule 134 (statement)


State 152

  135 statement: jump_statement .

    $default  reduce using rule 135 (statement)


State 153

  101 direct_declarator: LEFT_ROUND_BRACE declarator RIGHT_ROUND_BRACE .

    $default  reduce using rule 101 (direct_declarator)


State 154

  102 direct_declarator: direct_declarator LEFT_SQUARE_BRACE assignment_expression_opt . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 215


State 155

   58 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 58 (assignment_expression_opt)


State 156

  115 identifier_list: IDENTIFIER .

    $default  reduce using rule 115 (identifier_list)


State 157

  111 parameter_declaration: declaration_specifiers . declarator
  112                      | declaration_specifiers .

    MULTIPLY  shift, and go to state 18

    IDENTIFIER        reduce using rule 106 (pointer_opt)
    LEFT_ROUND_BRACE  reduce using rule 106 (pointer_opt)
    $default          reduce using rule 112 (parameter_declaration)

    declarator   go to state 216
    pointer_opt  go to state 23
    pointer      go to state 24


State 158

  103 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 217


State 159

  108 parameter_type_list: parameter_list .
  110 parameter_list: parameter_list . parameter_declaration

    CHAR      shift, and go to state 1
    DOUBLE    shift, and go to state 2
    SHORT     shift, and go to state 3
    LONG      shift, and go to state 4
    FLOAT     shift, and go to state 5
    INT       shift, and go to state 6
    SIGNED    shift, and go to state 7
    UNSIGNED  shift, and go to state 8
    VOID      shift, and go to state 9
    BOOL      shift, and go to state 10
    MATRIX    shift, and go to state 11

    $default  reduce using rule 108 (parameter_type_list)

    declaration_specifiers  go to state 157
    type_specifier          go to state 14
    parameter_declaration   go to state 218


State 160

  109 parameter_list: parameter_declaration .

    $default  reduce using rule 109 (parameter_list)


State 161

  104 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list_opt . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 219


State 162

  113 identifier_list_opt: identifier_list .
  116 identifier_list: identifier_list . IDENTIFIER

    IDENTIFIER  shift, and go to state 220

    $default  reduce using rule 113 (identifier_list_opt)


State 163

    6 primary_expression: LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE .

    $default  reduce using rule 6 (primary_expression)


State 164

   76 expression: expression assignment_expression .

    $default  reduce using rule 76 (expression)


State 165

   77 constant_expression: conditional_expression .

    $default  reduce using rule 77 (constant_expression)


State 166

  128 designator: LEFT_SQUARE_BRACE constant_expression . RIGHT_SQUARE_BRACE

    RIGHT_SQUARE_BRACE  shift, and go to state 221


State 167

  129 designator: PERIOD IDENTIFIER .

    $default  reduce using rule 129 (designator)


State 168

  118 initializer: RIGHT_ROUND_BRACE initializer_row_list RIGHT_CURLY_BRACE .

    $default  reduce using rule 118 (initializer)


State 169

  120 initializer_row_list: initializer_row_list SEMI_COLON . initializer_row

    LEFT_SQUARE_BRACE  shift, and go to state 78
    PERIOD             shift, and go to state 79

    $default  reduce using rule 124 (designation_opt)

    initializer_row   go to state 222
    designation_opt   go to state 82
    designation       go to state 83
    designation_list  go to state 84
    designator        go to state 85


State 170

  122 initializer_row: initializer_row COMMA . designation_opt initializer

    LEFT_SQUARE_BRACE  shift, and go to state 78
    PERIOD             shift, and go to state 79

    $default  reduce using rule 124 (designation_opt)

    designation_opt   go to state 223
    designation       go to state 83
    designation_list  go to state 84
    designator        go to state 85


State 171

  121 initializer_row: designation_opt initializer .

    $default  reduce using rule 121 (initializer_row)


State 172

  125 designation: designation_list EQUAL .

    $default  reduce using rule 125 (designation)


State 173

  127 designation_list: designation_list designator .

    $default  reduce using rule 127 (designation_list)


State 174

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression . RIGHT_SQUARE_BRACE
   76 expression: expression . assignment_expression

    IDENTIFIER          shift, and go to state 40
    INT_NO              shift, and go to state 41
    FLOAT_NO            shift, and go to state 42
    CHARACTER           shift, and go to state 43
    STRING              shift, and go to state 44
    RIGHT_SQUARE_BRACE  shift, and go to state 224
    LEFT_ROUND_BRACE    shift, and go to state 45
    INCREMENT           shift, and go to state 47
    AMPERSAND           shift, and go to state 48
    MULTIPLY            shift, and go to state 49
    ADD                 shift, and go to state 50
    SUBTRACT            shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 175

    9 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list_opt . RIGHT_ROUND_BRACE

    RIGHT_ROUND_BRACE  shift, and go to state 225


State 176

   15 argument_expression_list_opt: argument_expression_list .
   18 argument_expression_list: argument_expression_list . assignment_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 15 (argument_expression_list_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 226


State 177

   17 argument_expression_list: assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


State 178

   10 postfix_expression: postfix_expression PERIOD IDENTIFIER .

    $default  reduce using rule 10 (postfix_expression)


State 179

   11 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 11 (postfix_expression)


State 180

   61 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 61 (assignment_expression)


State 181

   29 multiplicative_expression: multiplicative_expression MULTIPLY cast_expression .

    $default  reduce using rule 29 (multiplicative_expression)


State 182

   30 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 183

   31 multiplicative_expression: multiplicative_expression PERCENTILE cast_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 184

   29 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   30                          | multiplicative_expression . DIVIDE cast_expression
   31                          | multiplicative_expression . PERCENTILE cast_expression
   33 additive_expression: additive_expression ADD multiplicative_expression .

    MULTIPLY    shift, and go to state 109
    DIVIDE      shift, and go to state 110
    PERCENTILE  shift, and go to state 111

    MULTIPLY  [reduce using rule 33 (additive_expression)]
    $default  reduce using rule 33 (additive_expression)


State 185

   29 multiplicative_expression: multiplicative_expression . MULTIPLY cast_expression
   30                          | multiplicative_expression . DIVIDE cast_expression
   31                          | multiplicative_expression . PERCENTILE cast_expression
   34 additive_expression: additive_expression SUBTRACT multiplicative_expression .

    MULTIPLY    shift, and go to state 109
    DIVIDE      shift, and go to state 110
    PERCENTILE  shift, and go to state 111

    MULTIPLY  [reduce using rule 34 (additive_expression)]
    $default  reduce using rule 34 (additive_expression)


State 186

   33 additive_expression: additive_expression . ADD multiplicative_expression
   34                    | additive_expression . SUBTRACT multiplicative_expression
   36 shift_expression: shift_expression LEFT_SHIFT additive_expression .

    ADD       shift, and go to state 112
    SUBTRACT  shift, and go to state 113

    ADD       [reduce using rule 36 (shift_expression)]
    SUBTRACT  [reduce using rule 36 (shift_expression)]
    $default  reduce using rule 36 (shift_expression)


State 187

   33 additive_expression: additive_expression . ADD multiplicative_expression
   34                    | additive_expression . SUBTRACT multiplicative_expression
   37 shift_expression: shift_expression RIGHT_SHIFT additive_expression .

    ADD       shift, and go to state 112
    SUBTRACT  shift, and go to state 113

    ADD       [reduce using rule 37 (shift_expression)]
    SUBTRACT  [reduce using rule 37 (shift_expression)]
    $default  reduce using rule 37 (shift_expression)


State 188

   36 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   37                 | shift_expression . RIGHT_SHIFT additive_expression
   39 relational_expression: relational_expression LESS_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 114
    RIGHT_SHIFT  shift, and go to state 115

    $default  reduce using rule 39 (relational_expression)


State 189

   36 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   37                 | shift_expression . RIGHT_SHIFT additive_expression
   40 relational_expression: relational_expression GREATER_THAN shift_expression .

    LEFT_SHIFT   shift, and go to state 114
    RIGHT_SHIFT  shift, and go to state 115

    $default  reduce using rule 40 (relational_expression)


State 190

   36 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   37                 | shift_expression . RIGHT_SHIFT additive_expression
   42 relational_expression: relational_expression LESS_THAN_EQUALTO shift_expression .

    LEFT_SHIFT   shift, and go to state 114
    RIGHT_SHIFT  shift, and go to state 115

    $default  reduce using rule 42 (relational_expression)


State 191

   36 shift_expression: shift_expression . LEFT_SHIFT additive_expression
   37                 | shift_expression . RIGHT_SHIFT additive_expression
   41 relational_expression: relational_expression GREATER_THAN_EQUALTO shift_expression .

    LEFT_SHIFT   shift, and go to state 114
    RIGHT_SHIFT  shift, and go to state 115

    $default  reduce using rule 41 (relational_expression)


State 192

   39 relational_expression: relational_expression . LESS_THAN shift_expression
   40                      | relational_expression . GREATER_THAN shift_expression
   41                      | relational_expression . GREATER_THAN_EQUALTO shift_expression
   42                      | relational_expression . LESS_THAN_EQUALTO shift_expression
   44 equality_expression: equality_expression DOUBLE_EQUAL relational_expression .

    LESS_THAN             shift, and go to state 116
    GREATER_THAN          shift, and go to state 117
    LESS_THAN_EQUALTO     shift, and go to state 118
    GREATER_THAN_EQUALTO  shift, and go to state 119

    $default  reduce using rule 44 (equality_expression)


State 193

   39 relational_expression: relational_expression . LESS_THAN shift_expression
   40                      | relational_expression . GREATER_THAN shift_expression
   41                      | relational_expression . GREATER_THAN_EQUALTO shift_expression
   42                      | relational_expression . LESS_THAN_EQUALTO shift_expression
   45 equality_expression: equality_expression NOT_EQUAL relational_expression .

    LESS_THAN             shift, and go to state 116
    GREATER_THAN          shift, and go to state 117
    LESS_THAN_EQUALTO     shift, and go to state 118
    GREATER_THAN_EQUALTO  shift, and go to state 119

    $default  reduce using rule 45 (equality_expression)


State 194

   44 equality_expression: equality_expression . DOUBLE_EQUAL relational_expression
   45                    | equality_expression . NOT_EQUAL relational_expression
   47 AND_expression: AND_expression AMPERSAND equality_expression .

    DOUBLE_EQUAL  shift, and go to state 120
    NOT_EQUAL     shift, and go to state 121

    $default  reduce using rule 47 (AND_expression)


State 195

   47 AND_expression: AND_expression . AMPERSAND equality_expression
   49 exclusive_or_expression: exclusive_or_expression XOR AND_expression .

    AMPERSAND  shift, and go to state 122

    AMPERSAND  [reduce using rule 49 (exclusive_or_expression)]
    $default   reduce using rule 49 (exclusive_or_expression)


State 196

   49 exclusive_or_expression: exclusive_or_expression . XOR AND_expression
   51 inclusive_or_expression: inclusive_or_expression OR exclusive_or_expression .

    XOR  shift, and go to state 123

    $default  reduce using rule 51 (inclusive_or_expression)


State 197

   51 inclusive_or_expression: inclusive_or_expression . OR exclusive_or_expression
   53 logical_AND_expression: logical_AND_expression BINARY_AND inclusive_or_expression .

    OR  shift, and go to state 124

    $default  reduce using rule 53 (logical_AND_expression)


State 198

   53 logical_AND_expression: logical_AND_expression . BINARY_AND inclusive_or_expression
   55 logical_OR_expression: logical_OR_expression BINARY_OR logical_AND_expression .

    BINARY_AND  shift, and go to state 125

    $default  reduce using rule 55 (logical_OR_expression)


State 199

   57 conditional_expression: logical_OR_expression QUESTION_MARK expression . COLON conditional_expression
   76 expression: expression . assignment_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51
    COLON             shift, and go to state 227

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 200

  156 jump_statement: BREAK SEMI_COLON .

    $default  reduce using rule 156 (jump_statement)


State 201

  137 labeled_statement: CASE constant_expression . COLON statement

    COLON  shift, and go to state 228


State 202

  155 jump_statement: CONTINUE SEMI_COLON .

    $default  reduce using rule 155 (jump_statement)


State 203

  138 labeled_statement: DEFAULT COLON . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 229
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 204

  151 iteration_statement: DO statement . WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON

    WHILE  shift, and go to state 230


State 205

  152 iteration_statement: FOR LEFT_ROUND_BRACE . SEMI_COLON expression_opt expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement
  153                    | FOR LEFT_ROUND_BRACE . declaration expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

    CHAR        shift, and go to state 1
    DOUBLE      shift, and go to state 2
    SHORT       shift, and go to state 3
    LONG        shift, and go to state 4
    FLOAT       shift, and go to state 5
    INT         shift, and go to state 6
    SIGNED      shift, and go to state 7
    UNSIGNED    shift, and go to state 8
    VOID        shift, and go to state 9
    BOOL        shift, and go to state 10
    MATRIX      shift, and go to state 11
    SEMI_COLON  shift, and go to state 231

    declaration             go to state 232
    declaration_specifiers  go to state 34
    type_specifier          go to state 14


State 206

  154 jump_statement: GOTO IDENTIFIER .

    $default  reduce using rule 154 (jump_statement)


State 207

  147 selection_statement: IF LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement
  148                    | IF LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement ELSE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression                 go to state 233


State 208

  157 jump_statement: RETURN expression_opt . SEMI_COLON

    SEMI_COLON  shift, and go to state 234


State 209

  149 selection_statement: SWITCH LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression                 go to state 235


State 210

  150 iteration_statement: WHILE LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression                 go to state 236


State 211

  136 labeled_statement: IDENTIFIER COLON . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 237
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 212

  146 expression_statement: expression_opt SEMI_COLON .

    $default  reduce using rule 146 (expression_statement)


State 213

  139 compound_statement: LEFT_CURLY_BRACE block_item_list_opt RIGHT_CURLY_BRACE .

    $default  reduce using rule 139 (compound_statement)


State 214

  143 block_item_list: block_item_list block_item .

    $default  reduce using rule 143 (block_item_list)


State 215

  102 direct_declarator: direct_declarator LEFT_SQUARE_BRACE assignment_expression_opt RIGHT_SQUARE_BRACE .

    $default  reduce using rule 102 (direct_declarator)


State 216

  111 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 111 (parameter_declaration)


State 217

  103 direct_declarator: direct_declarator LEFT_ROUND_BRACE parameter_type_list RIGHT_ROUND_BRACE .

    $default  reduce using rule 103 (direct_declarator)


State 218

  110 parameter_list: parameter_list parameter_declaration .

    $default  reduce using rule 110 (parameter_list)


State 219

  104 direct_declarator: direct_declarator LEFT_ROUND_BRACE identifier_list_opt RIGHT_ROUND_BRACE .

    $default  reduce using rule 104 (direct_declarator)


State 220

  116 identifier_list: identifier_list IDENTIFIER .

    $default  reduce using rule 116 (identifier_list)


State 221

  128 designator: LEFT_SQUARE_BRACE constant_expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 128 (designator)


State 222

  120 initializer_row_list: initializer_row_list SEMI_COLON initializer_row .
  122 initializer_row: initializer_row . COMMA designation_opt initializer

    COMMA  shift, and go to state 170

    $default  reduce using rule 120 (initializer_row_list)


State 223

  122 initializer_row: initializer_row COMMA designation_opt . initializer

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 46
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 68
    initializer                go to state 238


State 224

    8 postfix_expression: postfix_expression LEFT_SQUARE_BRACE expression RIGHT_SQUARE_BRACE .

    $default  reduce using rule 8 (postfix_expression)


State 225

    9 postfix_expression: postfix_expression LEFT_ROUND_BRACE argument_expression_list_opt RIGHT_ROUND_BRACE .

    $default  reduce using rule 9 (postfix_expression)


State 226

   18 argument_expression_list: argument_expression_list assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 227

   57 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON . conditional_expression

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 107
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 239


State 228

  137 labeled_statement: CASE constant_expression COLON . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 240
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 229

  138 labeled_statement: DEFAULT COLON statement .

    $default  reduce using rule 138 (labeled_statement)


State 230

  151 iteration_statement: DO statement WHILE . LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON

    LEFT_ROUND_BRACE  shift, and go to state 241


State 231

  152 iteration_statement: FOR LEFT_ROUND_BRACE SEMI_COLON . expression_opt expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    IDENTIFIER        [reduce using rule 74 (expression_opt)]
    INT_NO            [reduce using rule 74 (expression_opt)]
    FLOAT_NO          [reduce using rule 74 (expression_opt)]
    CHARACTER         [reduce using rule 74 (expression_opt)]
    STRING            [reduce using rule 74 (expression_opt)]
    LEFT_ROUND_BRACE  [reduce using rule 74 (expression_opt)]
    INCREMENT         [reduce using rule 74 (expression_opt)]
    AMPERSAND         [reduce using rule 74 (expression_opt)]
    MULTIPLY          [reduce using rule 74 (expression_opt)]
    ADD               [reduce using rule 74 (expression_opt)]
    SUBTRACT          [reduce using rule 74 (expression_opt)]
    $default          reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 242
    expression                 go to state 141


State 232

  153 iteration_statement: FOR LEFT_ROUND_BRACE declaration . expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 243
    expression                 go to state 141


State 233

   76 expression: expression . assignment_expression
  147 selection_statement: IF LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement
  148                    | IF LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement ELSE statement

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 244
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 234

  157 jump_statement: RETURN expression_opt SEMI_COLON .

    $default  reduce using rule 157 (jump_statement)


State 235

   76 expression: expression . assignment_expression
  149 selection_statement: SWITCH LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 245
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 236

   76 expression: expression . assignment_expression
  150 iteration_statement: WHILE LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE statement

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 246
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 237

  136 labeled_statement: IDENTIFIER COLON statement .

    $default  reduce using rule 136 (labeled_statement)


State 238

  122 initializer_row: initializer_row COMMA designation_opt initializer .

    $default  reduce using rule 122 (initializer_row)


State 239

   57 conditional_expression: logical_OR_expression QUESTION_MARK expression COLON conditional_expression .

    $default  reduce using rule 57 (conditional_expression)


State 240

  137 labeled_statement: CASE constant_expression COLON statement .

    $default  reduce using rule 137 (labeled_statement)


State 241

  151 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE . expression RIGHT_ROUND_BRACE SEMI_COLON

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression                 go to state 247


State 242

  152 iteration_statement: FOR LEFT_ROUND_BRACE SEMI_COLON expression_opt . expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 248
    expression                 go to state 141


State 243

  153 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_opt . SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

    SEMI_COLON  shift, and go to state 249


State 244

  147 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement
  148                    | IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement ELSE statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 250
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 245

  149 selection_statement: SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 251
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 246

  150 iteration_statement: WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 252
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 247

   76 expression: expression . assignment_expression
  151 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE expression . RIGHT_ROUND_BRACE SEMI_COLON

    IDENTIFIER         shift, and go to state 40
    INT_NO             shift, and go to state 41
    FLOAT_NO           shift, and go to state 42
    CHARACTER          shift, and go to state 43
    STRING             shift, and go to state 44
    LEFT_ROUND_BRACE   shift, and go to state 45
    RIGHT_ROUND_BRACE  shift, and go to state 253
    INCREMENT          shift, and go to state 47
    AMPERSAND          shift, and go to state 48
    MULTIPLY           shift, and go to state 49
    ADD                shift, and go to state 50
    SUBTRACT           shift, and go to state 51

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 164


State 248

  152 iteration_statement: FOR LEFT_ROUND_BRACE SEMI_COLON expression_opt expression_opt . SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement

    SEMI_COLON  shift, and go to state 254


State 249

  153 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_opt SEMI_COLON . expression_opt RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 255
    expression                 go to state 141


State 250

  147 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .
  148                    | IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement . ELSE statement

    ELSE  shift, and go to state 256

    ELSE      [reduce using rule 147 (selection_statement)]
    $default  reduce using rule 147 (selection_statement)


State 251

  149 selection_statement: SWITCH LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 149 (selection_statement)


State 252

  150 iteration_statement: WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 150 (iteration_statement)


State 253

  151 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE . SEMI_COLON

    SEMI_COLON  shift, and go to state 257


State 254

  152 iteration_statement: FOR LEFT_ROUND_BRACE SEMI_COLON expression_opt expression_opt SEMI_COLON . expression_opt RIGHT_ROUND_BRACE statement

    IDENTIFIER        shift, and go to state 40
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 258
    expression                 go to state 141


State 255

  153 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_opt SEMI_COLON expression_opt . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 259


State 256

  148 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 260
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 257

  151 iteration_statement: DO statement WHILE LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE SEMI_COLON .

    $default  reduce using rule 151 (iteration_statement)


State 258

  152 iteration_statement: FOR LEFT_ROUND_BRACE SEMI_COLON expression_opt expression_opt SEMI_COLON expression_opt . RIGHT_ROUND_BRACE statement

    RIGHT_ROUND_BRACE  shift, and go to state 261


State 259

  153 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 262
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 260

  148 selection_statement: IF LEFT_ROUND_BRACE expression RIGHT_ROUND_BRACE statement ELSE statement .

    $default  reduce using rule 148 (selection_statement)


State 261

  152 iteration_statement: FOR LEFT_ROUND_BRACE SEMI_COLON expression_opt expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE . statement

    BREAK             shift, and go to state 128
    CASE              shift, and go to state 129
    CONTINUE          shift, and go to state 130
    DEFAULT           shift, and go to state 131
    DO                shift, and go to state 132
    FOR               shift, and go to state 133
    GOTO              shift, and go to state 134
    IF                shift, and go to state 135
    RETURN            shift, and go to state 136
    SWITCH            shift, and go to state 137
    WHILE             shift, and go to state 138
    IDENTIFIER        shift, and go to state 139
    INT_NO            shift, and go to state 41
    FLOAT_NO          shift, and go to state 42
    CHARACTER         shift, and go to state 43
    STRING            shift, and go to state 44
    LEFT_ROUND_BRACE  shift, and go to state 45
    LEFT_CURLY_BRACE  shift, and go to state 70
    INCREMENT         shift, and go to state 47
    AMPERSAND         shift, and go to state 48
    MULTIPLY          shift, and go to state 49
    ADD               shift, and go to state 50
    SUBTRACT          shift, and go to state 51

    $default  reduce using rule 74 (expression_opt)

    primary_expression         go to state 52
    postfix_expression         go to state 53
    unary_expression           go to state 54
    unary_operator             go to state 55
    cast_expression            go to state 56
    multiplicative_expression  go to state 57
    additive_expression        go to state 58
    shift_expression           go to state 59
    relational_expression      go to state 60
    equality_expression        go to state 61
    AND_expression             go to state 62
    exclusive_or_expression    go to state 63
    inclusive_or_expression    go to state 64
    logical_AND_expression     go to state 65
    logical_OR_expression      go to state 66
    conditional_expression     go to state 67
    assignment_expression      go to state 76
    expression_opt             go to state 140
    expression                 go to state 141
    statement                  go to state 263
    labeled_statement          go to state 144
    compound_statement         go to state 145
    expression_statement       go to state 149
    selection_statement        go to state 150
    iteration_statement        go to state 151
    jump_statement             go to state 152


State 262

  153 iteration_statement: FOR LEFT_ROUND_BRACE declaration expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 153 (iteration_statement)


State 263

  152 iteration_statement: FOR LEFT_ROUND_BRACE SEMI_COLON expression_opt expression_opt SEMI_COLON expression_opt RIGHT_ROUND_BRACE statement .

    $default  reduce using rule 152 (iteration_statement)
